<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Cupdate Releases</title>
  <updated>2025-06-15T04:35:19.135567-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/AlexGustafsson/cupdate/releases/tag/v0.16.0</id>
    <title>New release for Cupdate: </title>
    <updated>2025-02-01T04:13:56-05:00</updated>
    <author>
      <name>AlexGustafsson/cupdate</name>
    </author>
    <content>&lt;p&gt;Thanks to everyone who created feature requests, bug reports and tested fixes. Your help is instrumental to continue to improve Cupdate!&lt;/p&gt;
&lt;p&gt;A special thanks to @thespad for helping out with discussing and testing some of the new features.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add grid view layout option to UI&lt;/li&gt;
&lt;li&gt;Track digests used by the runtime&lt;/li&gt;
&lt;li&gt;Track changes made to tags like &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;v8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add support for custom registries like Harbor and Zot, as well as authentication towards registries like Docker Hub and GitHub Container Registry&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Grid view&lt;/h3&gt;
&lt;p&gt;&lt;img width="1920" alt="Skärmavbild 2025-01-27 kl  17 21 54" src="https://github.com/user-attachments/assets/29886992-75c2-4419-82af-1162236e6f7a" /&gt;&lt;/p&gt;
&lt;p&gt;A compact grid layout has been added. The layout will fit as many images as possible on one row, adapting to your viewport's width. The chosen layout is stored in the browser's local storage so that it's available the next time you use the UI.&lt;/p&gt;
&lt;h3&gt;Custom registries&lt;/h3&gt;
&lt;p&gt;Cupdate now supports custom registries like Harbor and Zot as well as tracking private images from registries like Docker Hub and GitHub Container Registry using a token.&lt;/p&gt;
&lt;p&gt;The implementation closely follows the format used by Docker and Kubernetes. To use the feature, you'll need to specify a config file via &lt;code&gt;CUPDATE_REGISTRY_SECRETS&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "auths": {
    "registry.example.com": {
      "username": "username",
      "password": "password"
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "auths": {
    "registry.example.com": {
      "auth": "c29tZSB0b2tlbg=="
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "HttpHeaders": {
    "x-some-special-auth": "letmein"
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For now, there's no support for insecure registries served without TLS.&lt;/p&gt;
&lt;h3&gt;Tracking digests&lt;/h3&gt;
&lt;p&gt;&lt;img width="824" alt="Skärmavbild 2025-01-27 kl  17 39 33" src="https://github.com/user-attachments/assets/dad1dc77-1e1a-4c47-aa53-bd1b3b6909a4" /&gt;&lt;/p&gt;
&lt;p&gt;Tags like &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;v8&lt;/code&gt; and &lt;code&gt;v3.0.0&lt;/code&gt; have one thing in common - they all refer to a &lt;em&gt;manfiest&lt;/em&gt; containing information about a container image. The manifest is always referenced by its hash sum - its &lt;em&gt;digest&lt;/em&gt;. Tags can be changed at any time to point to any digest, but digests will forever uniquely refer to the same manifest. In most cases, the manifests nor the digests themselves contain any information about what "version" of a software it actually contains.&lt;/p&gt;
&lt;p&gt;This causes a couple of problems when trying to identify what "version" of a service is actually in use, so that Cupdate can find a newer version. In part, it means that your "latest" might not be the same as mine and that the "latest" today is not the same as yesterday.&lt;/p&gt;
&lt;p&gt;Up until now, Cupdate has only supported "well-behaved" image tags that follow anything resembling a &lt;a href="https://semver.org/"&gt;semantic version&lt;/a&gt;, assuming that they are never overwritten. This works great for tags like &lt;code&gt;v1.2.3&lt;/code&gt; and it works alright for tags like &lt;code&gt;v1.2&lt;/code&gt; and &lt;code&gt;v1&lt;/code&gt; as Cupdate can identify the version in use will be able to promote updates to &lt;code&gt;v1.2.4&lt;/code&gt; and beyond. It doesn't work at all for tags like &lt;code&gt;latest&lt;/code&gt;. Tags like &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;latest&lt;/code&gt; are typically overwritten, meaning Cupdate's information would become outdated over time.&lt;/p&gt;
&lt;p&gt;With this new feature, Cupdate will try its best to identify the digest used by the underlying container runtime - again, uniquely refering to the specific manifest in use by its digest. When checking for updates, Cupdate will notice if the digest that a tag currently points to differs from the one used locally. This now enables Cupdate to promote you to update &lt;code&gt;alpine:latest&lt;/code&gt; and &lt;code&gt;mongo:v8&lt;/code&gt; to a new version because the tags have been overwritten.&lt;/p&gt;
&lt;p&gt;Please be aware that due to the limitations of the information made available by container registries and the image manifests themselves, it will be impossible in most cases to present a typical version like &lt;code&gt;v3.0.0&lt;/code&gt; if you use tags like &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;v3&lt;/code&gt; and &lt;code&gt;v3.3&lt;/code&gt;. There's simply no technical way of knowing what &lt;code&gt;latest&lt;/code&gt; means in your context. As always, the best practice and what works best with Cupdate is to use tags like &lt;code&gt;v3.3.0&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;The full version is always shown in the UI when hovering over a version: &lt;/p&gt;
&lt;p&gt;&lt;img width="420" alt="image" src="https://github.com/user-attachments/assets/c194c348-c91d-4e4b-a88c-28033500dadd" /&gt;&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a favicon and logo override for Cupdate&lt;/li&gt;
&lt;li&gt;Improve intuitiveness of full-text search&lt;/li&gt;
&lt;li&gt;Improve support for references with IPs (v4 and v6) and pinned digests&lt;/li&gt;
&lt;li&gt;Update data shown on the page without a refresh (when shown the update toast)&lt;/li&gt;
&lt;li&gt;Make page indexes start at 1&lt;/li&gt;
&lt;li&gt;Minor UI improvements&lt;/li&gt;
&lt;li&gt;Fix colors of layout button, use appropriate cursor&lt;/li&gt;
&lt;li&gt;Remove divider in summary&lt;/li&gt;
&lt;li&gt;Keep query when going back from an image page&lt;/li&gt;
&lt;li&gt;Fix Bézier curves not showing in graph view in Firefox&lt;/li&gt;
&lt;li&gt;Set referrer policy on video elements&lt;/li&gt;
&lt;li&gt;Fix error with images missing quay vulnerability scans&lt;/li&gt;
&lt;li&gt;Fix tags being shown in the image name&lt;/li&gt;
&lt;li&gt;Fix GitHub packages data for packages owned by organizations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Deprecations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CUPDATE_KUBERNETES_INCLUDE_OLD_REPLICAS&lt;/code&gt; environment variable now does nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Breaking changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;References will now contain the digest as well in almost all cases. This means that the &lt;code&gt;reference&lt;/code&gt; and &lt;code&gt;latestReference&lt;/code&gt; field returned by APIs can look like &lt;code&gt;alpine:v3@sha256:56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099&lt;/code&gt; as opposed to just &lt;code&gt;alpine:v3&lt;/code&gt;. As the reference is the primary key of the database, it also means that all entries of the database will be removed updated over time. No user intervention is required.&lt;/li&gt;
&lt;li&gt;The Kubernetes dependency graph no longer includes templated resources like a job's pod template, which in turn can have a pod template which in turn depends on an image.&lt;/li&gt;
&lt;li&gt;Getting old replicas from Kubernetes is no longer supported.&lt;/li&gt;
&lt;li&gt;Page indexes now start at 1. Specifying &lt;code&gt;page=0&lt;/code&gt; to &lt;code&gt;/api/v1/images&lt;/code&gt; will return 400 bad request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/AlexGustafsson/cupdate/compare/v0.15.0...v0.16.0&lt;/p&gt;</content>
    <link href="https://github.com/AlexGustafsson/cupdate/releases/tag/v0.16.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/AlexGustafsson/cupdate/releases/tag/v0.17.0</id>
    <title>New release for Cupdate: </title>
    <updated>2025-02-16T10:32:05-05:00</updated>
    <author>
      <name>AlexGustafsson/cupdate</name>
    </author>
    <content>&lt;p&gt;Thanks to everyone who created feature requests, bug reports and tested fixes. Your help is instrumental to continue to improve Cupdate!&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;h3&gt;Tracking workflow runs&lt;/h3&gt;
&lt;p&gt;Cupdate uses a &lt;em&gt;workflow&lt;/em&gt; to process images, the workflow runs &lt;em&gt;jobs&lt;/em&gt; and jobs consist of &lt;em&gt;steps&lt;/em&gt;. If you're familiar with Github Actions, Cupdate's workflows work much the same.&lt;/p&gt;
&lt;p&gt;Being a core part of Cupdate, observability of the workflows progress is key to debugging issues. In v0.17.0, Cupdate now tracks each and every workflow run, making their durations, statuses and errors available via the API and UI as soon as they've completed.&lt;/p&gt;
&lt;p&gt;&lt;img width="825" alt="image" src="https://github.com/user-attachments/assets/e7ffcebe-681f-4f5b-9c61-f8d92f10167d" /&gt;&lt;/p&gt;
&lt;p&gt;The graph shows each job of the latest workflow run. If you click one of the jobs, a summary of the steps run as part of the job is shown. If you're using tracing, a tracing id is shown, enabling you to continue correlating the run using your observability platform of choice. See &lt;a href="https://github.com/AlexGustafsson/cupdate/tree/d30d41278b375d4a567c19955aded1ad1a3d42b2/docs/observability"&gt;docs/observability&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;img width="836" alt="image" src="https://github.com/user-attachments/assets/764fc61a-bb36-48cf-aa6b-54b6d24ce83f" /&gt;&lt;/p&gt;
&lt;p&gt;If a step would fail, the error causing it to fail is shown.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/52ec3ed8-e77e-47aa-aa41-846ed299814a" /&gt;&lt;/p&gt;
&lt;p&gt;Tracking the workflows also allows Cupdate to show a summary of failed images on the dashboard and via the API, for use with services like Grafana or Homepage. If you're already using Homepage, see the updated documentation in &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/d30d41278b375d4a567c19955aded1ad1a3d42b2/docs/cookbook/README.md#showing-summary-in-homepage"&gt;docs/cookbook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img width="877" alt="image" src="https://github.com/user-attachments/assets/69590896-3ab5-4883-8c61-0eb0b436f717" /&gt;&lt;/p&gt;
&lt;p&gt;This also allows us to tag failing images, making it easy to find them.&lt;/p&gt;
&lt;p&gt;For now, only the latest workflow run is exposed through APIs. Workflow runs are by default kept for 48h. See &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/d30d41278b375d4a567c19955aded1ad1a3d42b2/docs/config.md"&gt;docs/config&lt;/a&gt; for details on the new environment variables &lt;code&gt;CUPDATE_WORKFLOW_CLEANUP_MAX_AGE&lt;/code&gt; and &lt;code&gt;CUPDATE_WORKFLOW_CLEANUP_INTERVAL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Ignore images using labels&lt;/h3&gt;
&lt;p&gt;Cupdate can now be configured to ignore images, containers, deployments, any Docker or Kubernetes resource that takes a label.&lt;/p&gt;
&lt;p&gt;```yaml&lt;/p&gt;
&lt;h1&gt;deployment.yaml&lt;/h1&gt;
&lt;p&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cupdate
    config.cupdate/ignore: "true"&lt;/p&gt;
&lt;h1&gt;...&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```yaml&lt;/p&gt;
&lt;h1&gt;compose.yaml&lt;/h1&gt;
&lt;p&gt;services:
  cupdate:
    labels:
      - cupdate.config.ignore: "true"
```&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
docker run --rm -it --label "cupdate.config.ignore=true" alpine:3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/6ce82f55c969ee6bf44e66ddf258d551fdfdb07c/docs/config.md#labels"&gt;docs/config&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;Tracking data changes&lt;/h3&gt;
&lt;p&gt;Whenever Cupdate processes an image and founds new data, that data is stored to an sqlite database. Starting in v0.17.0, Cupdate now internally tracks changes made to the data stored. Although not a front-facing feature, this enables improvements in existing features and lays the foundation for future improvements. If you're using the API, you can now get events whenever an image is processed or when there's a new version available. See the &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/d30d41278b375d4a567c19955aded1ad1a3d42b2/api.yaml#L387-L394"&gt;API docs&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;One improvement made to the existing feature set is that the web app can now tell what was updated and only prompt the user once data affecting the current page changes. This ensures that you won't get the toast every time Cupdate processes the image and updates basic fields such as when the image was last processed.&lt;/p&gt;
&lt;p&gt;&lt;img width="324" alt="image" src="https://github.com/user-attachments/assets/ed9a2536-c78d-44cb-ad5a-4e5303045706" /&gt;&lt;/p&gt;
&lt;h3&gt;Worker queue rewrite&lt;/h3&gt;
&lt;p&gt;In previous Cupdate versions, the internal queue used for processing references had a fixed max size and provided bad observability. At times, it made it impossible to manually schedule an image for processing via the UI or APIs.&lt;/p&gt;
&lt;p&gt;In v0.17.0, the worker queue implementation is rewritten to be unsized, with unique items, ensuring that you're always free to schedule images for processing, even if Cupdate's busy. It also makes sure that Cupdate won't schedule an image if it's already scheduled.&lt;/p&gt;
&lt;p&gt;The rewrite also greatly improves the observability of the queue by making sure the &lt;code&gt;cupdate_worker_available_burst&lt;/code&gt; gauge is always up-to-date. The change also adds a new gauge, &lt;code&gt;cupdate_worker_queue_length&lt;/code&gt; which contains the current queue length.&lt;/p&gt;
&lt;p&gt;See the example Grafana dashboard in &lt;a href="https://github.com/AlexGustafsson/cupdate/tree/d30d41278b375d4a567c19955aded1ad1a3d42b2/docs/observability"&gt;docs/observability&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The change also means that the &lt;code&gt;CUPDATE_PROCESSING_QUEUE_SIZE&lt;/code&gt; no longer has any effect.&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Set correct cursor on image update button, graph navigation buttons&lt;/li&gt;
&lt;li&gt;Only show update toast on change detection&lt;/li&gt;
&lt;li&gt;Bubble errors returned by steps and jobs to the workflow, improving context in error logs&lt;/li&gt;
&lt;li&gt;Color negative counters on the dashboard green when they're zeroed&lt;/li&gt;
&lt;li&gt;Remove the word 'images' from the dashboard, reducing space and repetitiveness &lt;/li&gt;
&lt;li&gt;Add skeleton animations to the UI when its loading for a long time (should only be shown during times of bad network connectivity)&lt;/li&gt;
&lt;li&gt;Add missing cascade delete to image tags, fixing tags staying after their images have been removed&lt;/li&gt;
&lt;li&gt;Add backdrop blur to top bar&lt;/li&gt;
&lt;li&gt;Fix z-index of surface navigation&lt;/li&gt;
&lt;li&gt;Fix filter not being included on pagination&lt;/li&gt;
&lt;li&gt;Fix settings card not showing on Cupdate's image page&lt;/li&gt;
&lt;li&gt;Fix Cupdate processing Kubernetes references before a digest is resolved by the runtime&lt;/li&gt;
&lt;li&gt;Fix typo causing nil check to pass&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Deprecations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CUPDATE_PROCESSING_QUEUE_SIZE&lt;/code&gt; has been removed and no longer has any meaning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Breaking changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cupdate now stores links and vulnerabilities as blobs instead of rows. The tables &lt;code&gt;images_links&lt;/code&gt; and &lt;code&gt;images_vulnerabilities&lt;/code&gt; are removed when Cupdate starts. In their place, &lt;code&gt;images_linksv2&lt;/code&gt; and &lt;code&gt;images_vulnerabilitiesv2&lt;/code&gt; are created. if you're just using the UI or API, you won't notice the change after Cupdate has processed the images, again updating the links and vulnerabilities to the new tables.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/AlexGustafsson/cupdate/compare/v0.16.0...v0.17.0&lt;/p&gt;</content>
    <link href="https://github.com/AlexGustafsson/cupdate/releases/tag/v0.17.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/AlexGustafsson/cupdate/releases/tag/v0.18.0</id>
    <title>New release for Cupdate: </title>
    <updated>2025-03-02T06:57:22-05:00</updated>
    <author>
      <name>AlexGustafsson/cupdate</name>
    </author>
    <content>&lt;p&gt;Thanks to everyone who created feature requests, bug reports and tested fixes. Your help is instrumental to continue to improve Cupdate!&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;h3&gt;Controlling image updates with labels (e.g. pin tag)&lt;/h3&gt;
&lt;p&gt;When finding container images in use, Cupdate builds a graph of the image and its dependants.&lt;/p&gt;
&lt;p&gt;&lt;img width="825" alt="image" src="https://github.com/user-attachments/assets/2243c27a-23a9-4c3a-ac6a-826d004748b2" /&gt;&lt;/p&gt;
&lt;p&gt;This graph includes the image itself and any resources directly or indirectly relying on it.&lt;/p&gt;
&lt;p&gt;Since v0.17.0, Cupdate can take configuration from labels on any resource in the graph to configure how the image is (or isn't processed). Previously, this functionality could only be used to ignore images. Starting in v0.18.0, Cupdate supports additional configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stay-on-current-major&lt;/code&gt; - don't recommend updates from &lt;code&gt;3.21.2&lt;/code&gt; -&amp;gt; &lt;code&gt;4.0.0&lt;/code&gt;, but do recommend &lt;code&gt;3.21.2&lt;/code&gt; -&amp;gt; &lt;code&gt;3.22.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pin&lt;/code&gt; - don't recommend updates to other tags, only check the underlying manifest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These options are especially useful for databases. See the revised and much more detailed label config docs in &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/090c5cd387606deccb09b948716d8e4366551fe3/docs/config.md#labels"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to make it easier to undertand what settings are applied, Cupdate now exposes the labels in the UI, showing a small tag on nodes that have labels on them. The labels can be seen in detail by pressing on a node. The labels that affect an image are shown when clicking on an image's node.&lt;/p&gt;
&lt;p&gt;&lt;img width="822" alt="image" src="https://github.com/user-attachments/assets/9da27806-401f-4b2d-b2ea-73f39465a354" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img width="844" alt="image" src="https://github.com/user-attachments/assets/cdf960e6-985e-4fb1-b5b1-d2af26620624" /&gt;&lt;/p&gt;
&lt;h3&gt;Open Source Security Foundation's Scorecard&lt;/h3&gt;
&lt;p&gt;&lt;img width="832" alt="image" src="https://github.com/user-attachments/assets/51ce82e7-fb54-4536-8127-c7db6098ba77" /&gt;&lt;/p&gt;
&lt;p&gt;Cupdate cares for security, with features like checking for reported vulnerabilities. In v0.18.0, Cupdate adds support for the &lt;a href="https://scorecard.dev/#what-is-openssf-scorecard"&gt;Open Source Security Foundation's Scorecard&lt;/a&gt;, providing additional risk insight in open source projects. The scorecard report contains checks to score how well a project is maintained and following best practices such as dependency management tools, having a security policy, running fuzz tests and static code analysis tools, narrowing token permissions and more.&lt;/p&gt;
&lt;p&gt;For now, only repositiories scanned by the foundation are supported, which covers the top one million open source projects hosted on GitHub or GitLab. The tool can be run locally to test other repositories. At the time of writing, Cupdate's score is 7.7/10 (low risk), lacking fuzz tests and code reviews (single maintainer).&lt;/p&gt;
&lt;h3&gt;State store migration framework&lt;/h3&gt;
&lt;p&gt;As Cupdate is still in active development and hasn't yet reached 1.0, there has been breaking changes and will likely be more breaking changes. In the vast majority of cases, the changes made to the state store have gone unnoticed as they could be handled gracefully.&lt;/p&gt;
&lt;p&gt;To lay the foundation for stable updates of Cupdate, a migration framework has been implemented to ensure that changes to the state store can be made without requiring any user intervention when updating. The framework allows for migrating any version of Cupdate to a newer version, with transactional, delta migrations. The framework has already seen use to allow for the new scorecard feature.&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Show details of graph nodes in the UI when the node is clicked&lt;/li&gt;
&lt;li&gt;Improved UI responsiveness&lt;/li&gt;
&lt;li&gt;Wrap tags on small viewports&lt;/li&gt;
&lt;li&gt;Reduce padding of tags in cards&lt;/li&gt;
&lt;li&gt;Improve text wrapping of step durations&lt;/li&gt;
&lt;li&gt;Improved support for private GHCR images&lt;/li&gt;
&lt;li&gt;Propagate workflow job errors to dependencies, ensuring jobs are correctly skipped if a dependency's dependency fails&lt;/li&gt;
&lt;li&gt;Fix sort of semver tags with digest diff&lt;/li&gt;
&lt;li&gt;Improve graph layout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/AlexGustafsson/cupdate/compare/v0.17.0...v0.18.0&lt;/p&gt;</content>
    <link href="https://github.com/AlexGustafsson/cupdate/releases/tag/v0.18.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/AlexGustafsson/cupdate/releases/tag/v0.19.0</id>
    <title>New release for Cupdate: </title>
    <updated>2025-03-22T07:14:43-04:00</updated>
    <author>
      <name>AlexGustafsson/cupdate</name>
    </author>
    <content>&lt;p&gt;Thanks to everyone who created feature requests, bug reports and tested fixes. Your help is instrumental to continue to improve Cupdate!&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;h3&gt;Using Docker with (m)TLS&lt;/h3&gt;
&lt;p&gt;Cupdate now supports securely exposed Docker hosts using TLS, mTLS, trusted certificates or self-signed certificates - with per-host configuration.&lt;/p&gt;
&lt;p&gt;To use Docker with TLS where there is established trust (the Docker API is exposed using a certificate trusted by the host running Cupdate), simply specify your Docker host as &lt;code&gt;https://&amp;lt;my-host&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To use mTLS or self-signed certificates, additional configuration is required. By using the new &lt;code&gt;CUPDATE_DOCKER_TLS_PATH&lt;/code&gt; environment variable, you can now specify a directory in which certificates and keys are stored. For more information, refer to the new documentation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/AlexGustafsson/cupdate/tree/cdeb2b4c42a986e4baeab0fec0271a22f142309b/docs/docker#tls"&gt;https://github.com/AlexGustafsson/cupdate/tree/cdeb2b4c42a986e4baeab0fec0271a22f142309b/docs/docker#tls&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Generic registry auth&lt;/h3&gt;
&lt;p&gt;Cupdate now supports well-behaving registries which tell Cupdate how they expect authentication to work (via the &lt;code&gt;WWW-Authenticate&lt;/code&gt; header). This means that Cupdate will now work more reliably with images requiring authentication, such as private GHCR images or private Docker Hub images. But it also means that self-hosted registries such as Zot can work without dedicated support by Cupdate.&lt;/p&gt;
&lt;h3&gt;Towards 1.0.0&lt;/h3&gt;
&lt;p&gt;A lot of features and improvements have been added to Cupdate over the past minor releases, taking steps towards a first stable release (in the semantic sense). In order to get there and to make it possible to develop improvements and fixes with confidence that they don't break existing features or installations, a lot of effort has gone in to writing additional comprehensive test suites for Cupdate, targeting wide test coverage through unit and integration tests.&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clarify the risk score shown on images scanned by Open SSF&lt;/li&gt;
&lt;li&gt;Add support for registries with basic auth&lt;/li&gt;
&lt;li&gt;Ignore invalid OCI references from Docker Compose&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/AlexGustafsson/cupdate/compare/v0.18.0...v0.19.0&lt;/p&gt;</content>
    <link href="https://github.com/AlexGustafsson/cupdate/releases/tag/v0.19.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/AlexGustafsson/cupdate/releases/tag/v0.20.0</id>
    <title>New release for Cupdate: v0.20.0</title>
    <updated>2025-05-11T07:52:03-04:00</updated>
    <author>
      <name>AlexGustafsson/cupdate</name>
    </author>
    <content>&lt;p&gt;Thanks to everyone who created feature requests, bug reports and tested fixes. Your help is instrumental to continue to improve Cupdate!&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;h3&gt;Live demo&lt;/h3&gt;
&lt;p&gt;Cupdate's UI can now be experienced in a live demo over at https://alexgustafsson.github.io/cupdate/. It's always up-to-date - tracking the main branch.&lt;/p&gt;
&lt;h3&gt;Attestations&lt;/h3&gt;
&lt;p&gt;Cupdate now supports identifying, storing and presenting &lt;em&gt;attestations&lt;/em&gt;. Attestations are documents that provide valuable information from the build process of container images. Projects making use of attestations store and ship them within the container image. See: &lt;a href="https://docs.docker.com/build/metadata/attestations/attestation-storage/"&gt;https://docs.docker.com/build/metadata/attestations/attestation-storage/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are mainly two types of attestations, both of which are now supported by Cupdate.&lt;/p&gt;
&lt;h4&gt;Provenance&lt;/h4&gt;
&lt;p&gt;Provenance attestations include facts about the build process of a container image. It include details such as build timestamps, build parameters and version control metadata. It can also include the actual &lt;code&gt;Dockerfile&lt;/code&gt; used to build the image.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/96aa823a-1ef6-414b-a5ab-151cde3fc736" /&gt;&lt;/p&gt;
&lt;p&gt;More information: &lt;a href="https://docs.docker.com/build/metadata/attestations/slsa-provenance/"&gt;https://docs.docker.com/build/metadata/attestations/slsa-provenance/&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;SBOMs and vulnerability scanning&lt;/h4&gt;
&lt;p&gt;Software Bill of Materials (SBOM) attestations describe the software contained in a container image. It includes metadata such as names of packages, their versions, authors and licenses. This metadata can be used to further understand what building blocks were used to make up the program packaged within the container image. &lt;/p&gt;
&lt;p&gt;Cupdate now not only identifies and stores these SBOMs, it also uses them to scan for known vulnerabilities. This feature enables more advanced scanning than previously.&lt;/p&gt;
&lt;p&gt;The existing sources of vulnerabilities (such as Docker Scout) are still used and have been reworked to ensure that all vulnerabilities are identifiable as to integrate well with vulnerabilities found in SBOMs. As part of this change, the API for vulnerabilities has changed. Cupdate now serves vulnerabilities on a separate API path as opposed to including the data with the image data. Additionally, to promote open standards, the &lt;a href="https://osv.dev/"&gt;OSV&lt;/a&gt; format is now used.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/0c2f87ad-d47d-4bae-bf24-f789e020d69e" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/89a7e9ba-2939-4661-8248-709ed37d4ca9" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/18361ff1-98b2-49db-9432-c21f3d42568d" /&gt;&lt;/p&gt;
&lt;p&gt;Cupdate publishes provenance attestations and an SBOM attestation for itself. Provenance attestations are signed and can be verified here: https://github.com/AlexGustafsson/cupdate/attestations.&lt;/p&gt;
&lt;h3&gt;UI improvements&lt;/h3&gt;
&lt;p&gt;A lot of changes have been made to improve the UI and UX of the web app, as well as its accessability.&lt;/p&gt;
&lt;p&gt;All cards are now minimizable. The state of each card is persisted in local storage.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/6ace46b9-2552-4df7-a9ed-2b89f4b314bf" /&gt;&lt;/p&gt;
&lt;p&gt;Links have been moved to their own card, allowing Cupdate to show a description for known URL types.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/8b91d55f-11af-48c0-9f71-5378b99bed06" /&gt;&lt;/p&gt;
&lt;p&gt;Graph rendering has been reworked to better render graphs with many nodes. The controls have been reworked to be more clear and in-line with the rest of the UI.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/77348ed4-29e4-45fa-b003-ac33d74a4255" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/dcf03931-7830-4adc-a5c4-f5861f3dba6b" /&gt;&lt;/p&gt;
&lt;p&gt;Tags have been reworked to better convey their meaning and urgency. Tags are now sorted based on their importance / urgency. For example, that an image is vulnerable is shown before that it's part of a specific namespace and that an image is outdated is shown before its "bump". Additionally, colors have been chosen to better depict the urgency of tags - making it easier to quickly identify the state of an image. To further improve the context of tags like bumps, more tags are now namespaced. &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/f5f830ee-258f-41f1-8279-038a0d5fe4c2" /&gt;&lt;/p&gt;
&lt;p&gt;On small screens, the grid view will now show two columns.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/923e417d-37c2-4a68-9331-b8d4d0d33857" /&gt;&lt;/p&gt;
&lt;p&gt;Other changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The UI has been made more accessible by allowing the entire app to be used with the keyboard.&lt;/li&gt;
&lt;li&gt;Graphs will now continue to automatically center when the screen size changes&lt;/li&gt;
&lt;li&gt;Dialogs, toasts and tooltips are animated&lt;/li&gt;
&lt;li&gt;The reference names such as &lt;code&gt;ghcr.io/alexgustafsson/cupdate&lt;/code&gt; will now word break on slashes&lt;/li&gt;
&lt;li&gt;Move "schedule processing" button to the workflow card&lt;/li&gt;
&lt;li&gt;Reset scroll on page change&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Status clarifications&lt;/h3&gt;
&lt;p&gt;Cupdate runs a lot of checks for every image to identify as much useful information as possible. Not all checks succeed all of the time, depending on whether the data is at all available, or locked behind authentication. Cupdate will now more clearly show the status of images, splitting the "failed" status to "failed" and "incomplete".&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Failed: images are considered failed if the information required to identify the latest version failed&lt;/li&gt;
&lt;li&gt;Incomplete: images are considered incomplete if one or more parts of the workflow that provides additional information failed to run&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/a647de30-cec4-473d-b0fd-444cabb781cc" /&gt;&lt;/p&gt;
&lt;h3&gt;Towards 1.0.0&lt;/h3&gt;
&lt;p&gt;A lot of features and improvements have been added to Cupdate over the past minor releases, taking steps towards a first stable release (in the semantic sense). In order to get there and to make it possible to develop improvements and fixes with confidence that they don't break existing features or installations, a lot of effort has gone in to writing additional comprehensive test suites for Cupdate, targeting wide test coverage through unit and integration tests.&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add hosts / nodes to dependency graph&lt;/li&gt;
&lt;li&gt;Fix vulnerabilities not being upserted correctly&lt;/li&gt;
&lt;li&gt;Delete potentially outdated data&lt;/li&gt;
&lt;li&gt;Cache immutable web assets, making page load faster&lt;/li&gt;
&lt;li&gt;Serve web content with gzip, making page load faster&lt;/li&gt;
&lt;li&gt;Fix incorrect use of Docker config's auth field&lt;/li&gt;
&lt;li&gt;Don't send &lt;code&gt;traceresponse&lt;/code&gt; when not tracing&lt;/li&gt;
&lt;li&gt;Include all known tags in UI dropdown&lt;/li&gt;
&lt;li&gt;Support an "or" operator in tag filters - not yet exposed in UI&lt;/li&gt;
&lt;li&gt;Improve web server error handling&lt;/li&gt;
&lt;li&gt;Fix web server returning wrong status code in edge case&lt;/li&gt;
&lt;li&gt;Set image description from annotations if no other means are found&lt;/li&gt;
&lt;li&gt;Fix constant trace id shown i UI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Breaking changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;vulnerabilities&lt;/code&gt; field of the image document now only includes the number of identified vulnerabilities&lt;/li&gt;
&lt;li&gt;Vulnerabilities are now served on a separate API path (&lt;code&gt;/image/vulnerabilities&lt;/code&gt;), using the OSV format&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/AlexGustafsson/cupdate/blob/33c102845b66dfda1e13475cc0719998b4a3c43f/api.yaml"&gt;api documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/AlexGustafsson/cupdate/compare/v0.19.0...v0.20.0&lt;/p&gt;</content>
    <link href="https://github.com/AlexGustafsson/cupdate/releases/tag/v0.20.0" rel="alternate"/>
  </entry>
</feed>
