<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Meilisearch Releases</title>
  <updated>2025-08-04T21:34:01.285762-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.14.0</id>
    <title>New release for Meilisearch: v1.14.0 ü¶´</title>
    <updated>2025-04-14T04:29:13-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.14 gives more granular control over which parts of filters you can disable for indexing performance optimization. This release also includes composite embedders, which can improve embedding generation during search and indexing, and a new route to retrieve multiple documents by their IDs.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Granular filterable attribute settings&lt;/h2&gt;
&lt;p&gt;v1.14 gives you more control over which types of filter you want to disable in your searches. This allows you to further optimize indexing speeds by letting you activate only the filter features you need.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;PATCH /indexes/INDEX_NAME/settings&lt;/code&gt; to specify which filters you want to enable for each attribute in your documents:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
    "filterableAttributes": [
      {
        "attributePatterns": ["genre", "artist"],
        "features": {
          "facetSearch": true,
          "filter": {
            "equality": true,
            "comparison": false
          }
        }
      },
      {
        "attributePatterns": ["rank"],
        "features": {
          "facetSearch": false,
          "filter": {
            "equality": true,
            "comparison": true
          }
        }
      }
    ]
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For more details about this feature, please refer to &lt;a href="https://www.meilisearch.com/docs/reference/api/settings#filterable-attribute-object"&gt;the dedicated documentation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5254"&gt;#5254&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Composite embedders&lt;/h2&gt;
&lt;p&gt;This feature allows using different embedders at search and indexing time. This can be useful when optimizing AI-powered search performance. For example, you may prefer to use:
- A remote embedder during indexing, as remote embedders have higher bandwidth and can generate more embeddings per second
- A local embedder when answering to search queries, as local embedders have lower latency and can respond more quickly to user input&lt;/p&gt;
&lt;p&gt;To use the feature, follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable the &lt;code&gt;Composite embedders&lt;/code&gt; feature with the Meilisearch Cloud interface, or with the &lt;code&gt;/experimental-features&lt;/code&gt; route:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sh
curl MEILISEARCH_URL/experimental-features \
  -H 'Content-Type: application/json'  \
  -d '{"compositeEmbedders": true}'&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Next, create an embedder, setting its &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;"composite"&lt;/code&gt; and defining one &lt;code&gt;searchEmbedder&lt;/code&gt; and one &lt;code&gt;indexingEmbedder&lt;/code&gt;:
&lt;code&gt;jsonc
{
  "embedders": {
    "text": {
      "source": "composite",
      "searchEmbedder": {
        "source": "huggingFace",
        "model": "baai/bge-base-en-v1.5",
        "revision": "a5beb1e3e68b9ab74eb54cfd186867f64f240e1a"
      },
      "indexingEmbedder": {
        "source": "rest",
        "url": "https://URL.endpoints.huggingface.cloud",
        "apiKey": "hf_XXXXXXX",
        "documentTemplate": "Your {{doc.template}}",
        "request": {
          "inputs": [
            "{{text}}",
            "{{..}}"
          ]
        },
        "response": [
          "{{embedding}}",
          "{{..}}"
        ]
      }
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the composite embedder has been created, Meilisearch will use its &lt;code&gt;indexingEmbedder&lt;/code&gt; during indexing and &lt;code&gt;searchEmbedder&lt;/code&gt; when responding to user queries&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details about this feature, please refer to its &lt;a href="https://www.notion.so/meilisearch/Composite-embedder-usage-14a4b06b651f81859dc3df21e8cd02a0?pvs=4#19f4b06b651f809ab3ecc0daae7d5856"&gt;public usage page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5371"&gt;#5371&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5401"&gt;#5401&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Retrieve multiple documents by ID&lt;/h2&gt;
&lt;p&gt;It is now possible to retrieve multiple documents by their IDs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H 'Content-Type: application/json' MEILISEARCH_URL/indexes/INDEX_UID/documents -d '{ "ids": ["cody", "finn", "brandy", "gambit"] }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "results": [
    {
      "id": "brandy",
      "info": 13765493
    },
    {
      "id": "finn",
      "info": 35863
    },
    {
      "id": "cody",
      "info": 122263
    },
    {
      "id": "gambit",
      "info": 22222
    }
  ],
  "offset": 0,
  "limit": 20,
  "total": 4
}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!WARNING]
Documents are &lt;em&gt;not&lt;/em&gt; returned in the queried order. Non-existent documents are ignored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5384"&gt;#5384&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Batch together &lt;code&gt;/documents&lt;/code&gt; requests using either &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5293"&gt;#5293&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display timestamped internal indexing steps on the &lt;code&gt;/batches&lt;/code&gt; route by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5356"&gt;#5356&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5364"&gt;#5364&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Introduce &lt;code&gt;exhaustiveFacetCount&lt;/code&gt; parameter to &lt;code&gt;/facet-search&lt;/code&gt; route to retrieve an exhaustive facet count by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5369"&gt;#5369&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduce RAM consumption of arroy by @irevoire in https://github.com/meilisearch/arroy/pull/105&lt;/li&gt;
&lt;li&gt;Experimental feature: Cache embeddings during search (Read more in the &lt;a href="https://github.com/orgs/meilisearch/discussions/818"&gt;feature discussion&lt;/a&gt;) by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5418"&gt;#5418&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extend batch progress view to include indexing of vectors by @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5420"&gt;#5420&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Armenian characters are no longer case-sensitive by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5454&lt;/li&gt;
&lt;li&gt;Avoid reindexing searchables when the order changes by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5402&lt;/li&gt;
&lt;li&gt;Accept cancellation tasks even when the disk is full by @irevoire in https://github.com/meilisearch/meilisearch/pull/5492&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Geo update bug by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5407&lt;/li&gt;
&lt;li&gt;Fix prefix search on attributes listed in &lt;code&gt;disabledOnAttributes&lt;/code&gt; settings by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5415 (fixes &lt;a href="https://github.com/meilisearch/meilisearch/issues/5347"&gt;#5347&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/issues/5452"&gt;#5452&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CI to work with merge queues by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5456&lt;/li&gt;
&lt;li&gt;Support fetching the pooling method from the model configuration by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5355"&gt;#5355&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Delete unused prefixes by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5413"&gt;#5413&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixes mini dashboard to prevent the panel from popping up every time by @curquiza in https://github.com/meilisearch/meilisearch/pull/5436&lt;/li&gt;
&lt;li&gt;Enabling &lt;code&gt;rankingScoreThreshold&lt;/code&gt; no longer causes &lt;code&gt;_rankingScore&lt;/code&gt; to be miscalculated by @barloes and @dureuill in https://github.com/meilisearch/meilisearch/pull/5313&lt;/li&gt;
&lt;li&gt;Validate dimensions of embedding when receiving documents with &lt;code&gt;_vectors&lt;/code&gt; by @dureuill in https://github.com/meilisearch/meilisearch/pull/5478&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Bump Ubuntu in the CI from 20.04 to 22.04 by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5338"&gt;#5338&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bump heed to v0.22 by @irevoire and @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5406"&gt;#5406&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bump ring to v0.17.14 to compile on old aarch64 by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5423&lt;/li&gt;
&lt;li&gt;Bump zip from 2.2.2 to 2.3.0 by @dependabot in https://github.com/meilisearch/meilisearch/pull/5426&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Improve test performance of get_index.rs  by @DerTimonius in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5210"&gt;#5210&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ollama Integration Tests by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5308"&gt;#5308&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ensure the settings routes are properly configured when a new field is added to the Settings struct by @MichaScant in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5149"&gt;#5149&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Skip a snapshot test on Windows by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5383"&gt;#5383&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix CI to work with merge queues by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5456&lt;/li&gt;
&lt;li&gt;Accept total batch size in human size by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5421&lt;/li&gt;
&lt;li&gt;Add more progress levels to measure merging and post-processing by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5422 and https://github.com/meilisearch/meilisearch/pull/5468&lt;/li&gt;
&lt;li&gt;Isolate word fst usage to dedicate it to typo-correction by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5415&lt;/li&gt;
&lt;li&gt;Show database sizes batches by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5457 and https://github.com/meilisearch/meilisearch/pull/5464&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Please consider that the batches stats content can change anytime.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Improve performance of computing document stats by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5465&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @MichaScant
- &lt;a href="https://github.com/meilisearch/heed"&gt;Heed&lt;/a&gt;: @oXtxNt9U
- &lt;a href="https://github.com/meilisearch/arroy"&gt;Arroy&lt;/a&gt;: @ptondereau
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @NarHakobyan, @mosuka&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.14.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.15.0</id>
    <title>New release for Meilisearch: v1.15.0 ü¶ò</title>
    <updated>2025-06-09T06:07:36-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.15 adds a new typo tolerance setting, allowing you to disable typo tolerance for numbers. It also enables comparison operators for string filters.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment takes 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Please look over the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Disable typo tolerance for numbers&lt;/h2&gt;
&lt;p&gt;Set &lt;code&gt;typoTolerance.disableOnNumbers&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to disable typo tolerance for numbers:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl -X POST 'http://localhost:7700/indexes/movies/settings' \
  -H 'Content-Type: application/json' \
  -d '{
    "typoTolerance": {"disableOnNumbers": true}
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Deactivating the typo tolerance on numbers can be helpful when trying to reduce false positives, such as a query term &lt;code&gt;2024&lt;/code&gt; returning results that include &lt;code&gt;2025&lt;/code&gt; and &lt;code&gt;2004&lt;/code&gt;. It may also improve indexing performance.&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5494"&gt;#5494&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Lexicographic string filters&lt;/h2&gt;
&lt;p&gt;This release allows you to filter strings lexicographically by enabling comparison operators (&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=, TO) on string values:
&lt;code&gt;bash
curl -X POST 'http://localhost:7700/indexes/movies/search' \
  -H 'Content-Type: application/json' \
  -d '{
    "filter": "release_date &amp;gt;= '2024-06'"
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This new feature can be particularly useful when filtering human-readable dates.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5535"&gt;#5535&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Allows cancelling an upgrade to a new Meilisearch version by rolling back all upgraded indexes by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5523"&gt;#5523&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support EC private key as SSL certificate by @HDT3213 in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5471"&gt;#5471&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;When passing the relevant &lt;a href="https://github.com/orgs/meilisearch/discussions/833"&gt;CLI option&lt;/a&gt;, stop compacting snapshots, to speed up their generation by @dureuill and @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5498"&gt;#5498&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5560"&gt;#5560&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add new &lt;code&gt;batchStrategy&lt;/code&gt; field in the batches stats by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5488"&gt;#5488&lt;/a&gt;, &lt;a href="https://github.com/meilisearch/meilisearch/pull/5530"&gt;#5530&lt;/a&gt;, and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5588"&gt;#5588&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add log field tracking time spent searching in the vector store by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5525"&gt;#5525&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve filterable error messages by @CodeMan62 in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5425"&gt;#5425&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve error messages on embeddings dimension mismatch by @vuthanhtung2412 in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5449"&gt;#5449&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;/network&lt;/code&gt; URL validation error message format by @CodeMan62 in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5486"&gt;#5486&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Expose the task queue's status size in the Prometheus metrics by @DanasFi in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5512"&gt;#5512&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Fix &lt;code&gt;_matchesPosition&lt;/code&gt; length calculation to improve client-side cropping by @shaokeyibb in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5446"&gt;#5446&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;_geo&lt;/code&gt; ranking rule by @HDT3213 in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5487"&gt;#5487&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix a panic in the search that could happen when looking for typos with a search prefix having more than 65k possible hits in the DB by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5564"&gt;#5564&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make sure that passing &lt;code&gt;MEILI_EXPERIMENTAL_MAX_NUMBER_OF_BATCHED_TASKS&lt;/code&gt; to 0 results in Meilisearch never processing any kind of task. By @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5565"&gt;#5565&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Forbid value &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;maxTotalHits&lt;/code&gt; in the index settings by @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5566"&gt;#5566&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No longer reject &lt;code&gt;documentTemplate&lt;/code&gt;s that use array filters on documents (e.g. &lt;code&gt;join&lt;/code&gt;) by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5593"&gt;#5593&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependency updates&lt;/li&gt;
&lt;li&gt;Update Rust to 1.85.1 by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5480"&gt;#5480&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update charabia v0.9.3 by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5466"&gt;#5466&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update the Prometheus to fix a security vulnerability by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5513"&gt;#5513&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Setup the Milestone CI to update the Ruleset by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5444"&gt;#5444&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make the CI work with GitHub's merge queue grouping by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5445"&gt;#5445&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remove Bors references from the repository by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5447"&gt;#5447&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Split unit tests for tasks by @shu-kitamura in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5424"&gt;#5424&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Improve dumpless upgrade compatibility by @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5395"&gt;#5395&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix links and formatting in README for clarity and consistency by @ZeroZ-lab in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5533"&gt;#5533&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @shu-kitamura, @shaokeyibb, @CodeMan62, @vuthanhtung2412, @HDT3213, @DanasFi, and @ZeroZ-lab.
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @luflow, @mosuka, and @HDT3213.
- &lt;a href="https://github.com/RoaringBitmap/roaring-rs"&gt;RoaringBitmap&lt;/a&gt;: @lucascool12 and @Dr-Emann.&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.15.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.15.1</id>
    <title>New release for Meilisearch: v1.15.1 ü¶ò</title>
    <updated>2025-06-11T11:55:16-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.15.1 adds new experimental conversational features and enables LLM-driven chat features.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment takes 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Please look over the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h2&gt;Chat with your indexes&lt;/h2&gt;
&lt;p&gt;After enabling the experimental chat feature, you can create a chat workspace with the appropriate settings.
We &lt;a href="https://www.meilisearch.com/docs/guides/ai/getting_started_with_chat"&gt;have a guide&lt;/a&gt; on how to set up a good chat interface for your indexes.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl -X POST 'http://localhost:7700/chats/my-assistant/settings' \
  -H 'Content-Type: application/json' \
  -d '{
    "source": "openAi",
    "apiKey": "sk-abc..."
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then by using the official OpenAI SDK you'll be able to chat with your indexes.&lt;/p&gt;
&lt;p&gt;```javascript
import OpenAI from 'openai';&lt;/p&gt;
&lt;p&gt;const client = new OpenAI({
  baseURL: 'http://localhost:7700/chats/my-assistant',
  apiKey: 'YOUR_MEILISEARCH_CHAT_API_KEY',
});&lt;/p&gt;
&lt;p&gt;const completion = await client.chat.completions.create({
  model: 'gpt-3.5-turbo',
  messages: [{ role: 'user', content: 'What is Meilisearch?' }],
  stream: true,
});&lt;/p&gt;
&lt;p&gt;for await (const chunk of completion) {
  console.log(chunk.choices[0]?.delta?.content || '');
}
```&lt;/p&gt;
&lt;p&gt;Done by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5556"&gt;#5556&lt;/a&gt;.&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.15.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.15.2</id>
    <title>New release for Meilisearch: v1.15.2 ü¶ò</title>
    <updated>2025-06-12T15:08:55-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;This patch release introduces a major fix and some minor fixes.&lt;/p&gt;
&lt;h3&gt;Major fix: searchable attributes database bug&lt;/h3&gt;
&lt;p&gt;Some searchable fields were removed from the searchable databases when they were removed from the &lt;code&gt;filterableAttributes&lt;/code&gt; setting.
This made them unsearchable, although they were still precise in the &lt;code&gt;searchableAttributes&lt;/code&gt; setting.&lt;/p&gt;
&lt;p&gt;Fixed by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5660 &lt;/p&gt;
&lt;h3&gt;Minor fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix chat route missing base URL and Mistral error handling by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5665&lt;/li&gt;
&lt;li&gt;Various fixes to embedding regeneration by @dureuill in https://github.com/meilisearch/meilisearch/pull/5668&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.15.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.16.0</id>
    <title>New release for Meilisearch: v1.16.0 ü¶ö</title>
    <updated>2025-08-04T08:40:59-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.16 introduces two main features: multimodal embeddings and a new &lt;code&gt;/export&lt;/code&gt; route. Multimodal embeddings use AI-powered search to index images in addition to textual documents. The &lt;code&gt;/export&lt;/code&gt; route simplifies migrating from a local Meilisearch instance to Meilisearch Cloud.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Experimental feature: Multimodal embeddings&lt;/h2&gt;
&lt;p&gt;v1.16 allows indexing and searching non-textual documents, as well as performing searches with image queries. This new feature uses multimodal embedders to provide a common semantic representation for images, texts, and any other piece of data.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;First, enable the &lt;code&gt;multimodal&lt;/code&gt; experimental feature:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X PATCH 'MEILISEARCH_URL/experimental-features/' \
  -H 'Content-Type: application/json'  \
  --data-binary '{
    "multimodal": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, pick an embedder provider that supports multimodal embeddings such as &lt;a href="https://docs.cohere.com/v2/reference/embed"&gt;Cohere&lt;/a&gt; or &lt;a href="https://docs.voyageai.com/docs/multimodal-embeddings"&gt;VoyageAI&lt;/a&gt; to start building the embedding configuration.&lt;/p&gt;
&lt;p&gt;The following is an example configuration for multimodal embedder using VoyageAI:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X PATCH 'MEILISEARCH_URL/indexes/INDEX_NAME/settings/embedders' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "voyage": {
      "source": "rest",
      "url": "https://api.voyageai.com/v1/multimodalembeddings",
      "apiKey": "VOYAGE_API_KEY",
      "indexingFragments": {
        "text": {
          "value": {
            "content": [
              {
                "type": "text",
                "text": "A movie titled {{doc.title}} whose description starts with {{doc.overview|truncateWords:20}}."
              }
            ]
          }
        },
        "poster": {
          "value": {
            "content": [
              {
                "type": "image_url",
                "image_url": "{{doc.poster}}"
              }
            ]
          }
        }
      },
      "searchFragments": {
        "poster": {
          "value": {
            "content": [
              {
                "type": "image_url",
                "image_url": "{{media.poster}}"
              }
            ]
          }
        },
        "image": {
          "value": {
            "content": [
              {
                "type": "image_base64",
                "image_base64": "data:{{media.image.mime}};base64,{{media.image.data}}"
              }
            ]
          }
        },
        "text": {
          "value": {
            "content": [
              {
                "type": "text",
                "text": "{{q}}"
              }
            ]
          }
        }
      },
      "request": {
        "inputs": [
          "{{fragment}}",
          "{{..}}"
        ],
        "model": "voyage-multimodal-3"
      },
      "response": {
        "data": [
          {
            "embedding": "{{embedding}}"
          },
          "{{..}}"
        ]
      }
    }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The configuration above sets up Meilisearch to generate vectors for two fields: &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;poster&lt;/code&gt;. It also allows users to perform searches with an image URL, a raw image, or regular text.&lt;/p&gt;
&lt;p&gt;Use the new &lt;code&gt;media&lt;/code&gt; search parameter together with one of the &lt;code&gt;searchFragments&lt;/code&gt; you specified in your embedder to search with an image:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl -X POST 'MEILISEARCH_URL/indexes/INDEX_NAME/search' \
  -H 'content-type: application/json' \
  --data-binary '{
    "media": {
      "poster": "https://image.tmdb.org/t/p/w500/pgqj7QoBPWFLLKtLEpPmFYFRMgB.jpg"
    },
    "hybrid": {
      "embedder": "EMBEDDER_NAME"
    }
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can also perform a text search with &lt;code&gt;q&lt;/code&gt; and &lt;code&gt;hybrid&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl -X POST 'MEILISEARCH_URL/indexes/INDEX_NAME/search' \
  -H 'content-type: application/json' \
  --data-binary '{
    "q": "A movie with lightsabers in space",
    "hybrid": {
      "embedder": "voyage",
      "semanticRatio": 0.5
    }
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Meilisearch performs searches all fields with embeddings when parsing &lt;code&gt;hybrid&lt;/code&gt; queries targeting indexes with multimodal embedders.&lt;/p&gt;
&lt;p&gt;For more information about this feature, please refer to its &lt;a href="https://meilisearch.notion.site/Multimodal-search-usage-1c14b06b651f80c1bf9effe56dbeef54"&gt;public usage page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5596"&gt;#5596&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The new &lt;code&gt;/export&lt;/code&gt; route&lt;/h2&gt;
&lt;p&gt;v1.16 introduces a new &lt;code&gt;/export&lt;/code&gt; route that allows transferring documents between instances without having to create a dump or a snapshot. This feature is particularly useful when migrating from a local machine to Meilisearch Cloud.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;To transfer data between instances, query &lt;code&gt;/export&lt;/code&gt; and point its &lt;code&gt;url&lt;/code&gt; parameter to the URL of the target instance:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X POST 'MEILISEARCH_URL/export' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "url": "http://localhost:7711"
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will generate an export and task start migrating data between instances. Depending on the target instance, you may also have to supply an API key with full admin permissions in the &lt;code&gt;apiKey&lt;/code&gt; parameter. Consult the documentation for an exhaustive list of accepted parameters.&lt;/p&gt;
&lt;p&gt;If the request fails, Meilisearch will retry a few times before setting its status to failed. You may also cancel an export task manually. In this case, Meilisearch will interrupt the task locally, but not in the target instance.&lt;/p&gt;
&lt;p&gt;Done by @kerollmops with the help of @mubelotix in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5670"&gt;#5670&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add support for nested wildcards in &lt;code&gt;attributes_to_search_on&lt;/code&gt; by @lblack00 in https://github.com/meilisearch/meilisearch/pull/5548&lt;/li&gt;
&lt;li&gt;Improve support of geo field extraction from documents by @nnethercott in https://github.com/meilisearch/meilisearch/pull/5592&lt;/li&gt;
&lt;li&gt;Use all CPUs when importing dumps by @nnethercott in https://github.com/meilisearch/meilisearch/pull/5527&lt;/li&gt;
&lt;li&gt;Display the last embedder error live in batches by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5707&lt;/li&gt;
&lt;li&gt;Add fallback instance option to revert to old indexer by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5687&lt;/li&gt;
&lt;li&gt;Introduce filters in the chat completions by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5710&lt;/li&gt;
&lt;li&gt;Allow sorting on the /documents route by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5716&lt;/li&gt;
&lt;li&gt;A Read-Only Admin key will be created in new empty databases, to prevent accidentally writing to database while investigating, by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5693&lt;/li&gt;
&lt;li&gt;Use the edition 2024 documents indexer in the dumps by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5762&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Improve the performance when managing single-typo words by @dureuill in https://github.com/meilisearch/meilisearch/pull/5551&lt;/li&gt;
&lt;li&gt;Fix distinct attribute functionality for hybrid search by @dureuill in https://github.com/meilisearch/meilisearch/pull/5614&lt;/li&gt;
&lt;li&gt;Fix bug related to Cyrillic having different typo tolerance due to byte counting bug by @arthurgousset in https://github.com/meilisearch/meilisearch/pull/5617&lt;/li&gt;
&lt;li&gt;Fix Gemini &lt;code&gt;base_url&lt;/code&gt; when used with OpenAI clients by @diksipav in https://github.com/meilisearch/meilisearch/pull/5692&lt;/li&gt;
&lt;li&gt;Remove Gemini from LLM-providers list due to incompatibility with OpenAI by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5708&lt;/li&gt;
&lt;li&gt;Fix bug when using the environment variable for &lt;code&gt;--experimental-limit-batched-tasks-total-size&lt;/code&gt; by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5705&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;disableOnNumbers&lt;/code&gt; not being affected by typo tolerance settings resets by @Nymuxyzo in https://github.com/meilisearch/meilisearch/pull/5702&lt;/li&gt;
&lt;li&gt;Make sure to recover from missing update files by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5683&lt;/li&gt;
&lt;li&gt;Add analytics to chat completions by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5709&lt;/li&gt;
&lt;li&gt;Fix: Preserve order of searchable attributes when modified by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5751&lt;/li&gt;
&lt;li&gt;Fix Total Hits being wrong when rankingScoreThreshold is used by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5725&lt;/li&gt;
&lt;li&gt;Fix incorrect document count in stats after clearing all documents by @kametsun in https://github.com/meilisearch/meilisearch/pull/5754&lt;/li&gt;
&lt;li&gt;Fix chat settings dumpless upgrade by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5761&lt;/li&gt;
&lt;li&gt;Fix panic when attempting to remove an embedder that does not exist by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5734&lt;/li&gt;
&lt;li&gt;Fixes an issue where sending searchParameters: &lt;code&gt;{}&lt;/code&gt; in index chat settings would incorrectly set the limit to 20 instead of resetting to empty defaults&lt;/li&gt;
&lt;li&gt;Update the mini-dashboard to v0.2.22 and fix a crash by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5798&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Remove old dependencies by @Mubelotix in https://github.com/meilisearch/meilisearch/pull/5689&lt;/li&gt;
&lt;li&gt;Upgrade dependencies by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5686&lt;/li&gt;
&lt;li&gt;Bump the mini-dashboard to v0.2.20 by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5728&lt;/li&gt;
&lt;li&gt;CIs and tests (34 PRs, one folk, yes!)&lt;/li&gt;
&lt;li&gt;perf: Faster IT tests - stats.rs by @martin-g in https://github.com/meilisearch/meilisearch/pull/5572&lt;/li&gt;
&lt;li&gt;perf: Faster index::get_index IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5578&lt;/li&gt;
&lt;li&gt;tests: Assert succeeded/failed for the index::delete_index IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5580&lt;/li&gt;
&lt;li&gt;tests: Faster index::search::mod IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5584&lt;/li&gt;
&lt;li&gt;perf: Faster index::update_index IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5579&lt;/li&gt;
&lt;li&gt;perf: Faster integration tests for add_documents.rs by @martin-g in https://github.com/meilisearch/meilisearch/pull/5574&lt;/li&gt;
&lt;li&gt;tests: Faster search::errors IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5599&lt;/li&gt;
&lt;li&gt;tests: Faster search::locales IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5601&lt;/li&gt;
&lt;li&gt;tests: Faster search::matching_strategy IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5602&lt;/li&gt;
&lt;li&gt;tests: search::pagination IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5604&lt;/li&gt;
&lt;li&gt;tests: Faster search::restricted_searchable IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5605&lt;/li&gt;
&lt;li&gt;tests: Faster settings::distinct IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5606&lt;/li&gt;
&lt;li&gt;tests: Faster settings::proximity_settings IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5609&lt;/li&gt;
&lt;li&gt;tests: Faster settings::tokenizer_customization IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5610&lt;/li&gt;
&lt;li&gt;tests: Faster search::facet_search IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5600&lt;/li&gt;
&lt;li&gt;tests: Faster settings::get_settings IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5607&lt;/li&gt;
&lt;li&gt;tests: Faster vector::binary_quantized IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5618&lt;/li&gt;
&lt;li&gt;tests: Faster search::distinct IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5620&lt;/li&gt;
&lt;li&gt;tests: Faster similar::errors IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5621&lt;/li&gt;
&lt;li&gt;tests: Faster documents::get_documents IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5624&lt;/li&gt;
&lt;li&gt;tests: Faster documents::delete_documents IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5619&lt;/li&gt;
&lt;li&gt;tests: Faster search::geo IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5623&lt;/li&gt;
&lt;li&gt;tests: Faster search::hybrid IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5625&lt;/li&gt;
&lt;li&gt;tests: Faster tasks::mod IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5615&lt;/li&gt;
&lt;li&gt;tests: Faster stats::mod IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5611&lt;/li&gt;
&lt;li&gt;tests: Faster search::filters IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5622&lt;/li&gt;
&lt;li&gt;tests: Use Server::wait_task() instead of Index::wait_task() in search:: by @martin-g in https://github.com/meilisearch/meilisearch/pull/5700&lt;/li&gt;
&lt;li&gt;tests: Use Server::wait_task() instead of Index::wait_task() in index:: by @martin-g in https://github.com/meilisearch/meilisearch/pull/5698&lt;/li&gt;
&lt;li&gt;tests: Use Server::wait_task() instead of Index::wait_task() in settings:: by @martin-g in https://github.com/meilisearch/meilisearch/pull/5699&lt;/li&gt;
&lt;li&gt;tests: Use Server::wait_task() instead of Index::wait_task() in documents:: by @martin-g in https://github.com/meilisearch/meilisearch/pull/5697&lt;/li&gt;
&lt;li&gt;tests: Faster documents::update_documents IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5682&lt;/li&gt;
&lt;li&gt;tests: Faster similar::mod IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5680&lt;/li&gt;
&lt;li&gt;tests: Faster document::errors IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5677&lt;/li&gt;
&lt;li&gt;tests: Faster settings::prefix_search_settings IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5681&lt;/li&gt;
&lt;li&gt;tests: Faster search::multi IT tests by @martin-g in https://github.com/meilisearch/meilisearch/pull/5603&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Ignore flaky test by @dureuill in https://github.com/meilisearch/meilisearch/pull/5627&lt;/li&gt;
&lt;li&gt;ci: Use &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; secret for the &lt;code&gt;db change check&lt;/code&gt; workflow by @martin-g in https://github.com/meilisearch/meilisearch/pull/5632&lt;/li&gt;
&lt;li&gt;chore: Fix English grammar in SearchQueue's comments by @martin-g in https://github.com/meilisearch/meilisearch/pull/5642&lt;/li&gt;
&lt;li&gt;Typo fix by @mcmah309 in https://github.com/meilisearch/meilisearch/pull/5589&lt;/li&gt;
&lt;li&gt;docs: Recommend using a custom path for the benches' data by @martin-g in https://github.com/meilisearch/meilisearch/pull/5672&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @martin-g, @lblack00, @mcmah309, @nnethercott, @arthurgousset, @Mubelotix, @diksipav, @Nymuxyzo, @kametsun
- &lt;a href="https://github.com/meilisearch/arroy"&gt;Arroy&lt;/a&gt;: @nnethercott&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.16.0" rel="alternate"/>
  </entry>
</feed>
