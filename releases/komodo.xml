<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Komodo Releases</title>
  <updated>2025-06-15T02:33:31.744414-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/moghtech/komodo/releases/tag/v1.17.3</id>
    <title>New release for Komodo: Komodo v1.17.3</title>
    <updated>2025-04-24T22:33:19-04:00</updated>
    <author>
      <name>moghtech/komodo</name>
    </author>
    <content>&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Build&lt;/strong&gt;: Fixes a bug breaking &lt;code&gt;pre_build&lt;/code&gt; functionality, re #438 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thats it for this one, if you don't use this functionality, there is no other change.&lt;/p&gt;</content>
    <link href="https://github.com/moghtech/komodo/releases/tag/v1.17.3" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/moghtech/komodo/releases/tag/v1.17.4</id>
    <title>New release for Komodo: Komodo v1.17.4</title>
    <updated>2025-04-27T19:19:33-04:00</updated>
    <author>
      <name>moghtech/komodo</name>
    </author>
    <content>&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;In app terminal access to your servers&lt;/strong&gt; re #142&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docker exec&lt;/strong&gt; into containers re #75 &lt;/li&gt;
&lt;li&gt;IMPORTANT: Use &lt;code&gt;disable_terminals&lt;/code&gt; (&lt;code&gt;PERIPHERY_DISABLE_TERMINALS&lt;/code&gt;) in periphery config to &lt;strong&gt;disable this functionality&lt;/strong&gt; on particular servers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Adds the &lt;code&gt;Terminals&lt;/code&gt; tab, which allows you to connect to and manage &lt;strong&gt;multiple persistent shells&lt;/strong&gt; on the server.&lt;/li&gt;
&lt;li&gt;Uses &lt;a href="https://docs.rs/portable-pty/0.9.0/portable_pty/"&gt;portable-pty&lt;/a&gt; for the pseudoterminal on the backend and &lt;a href="https://xtermjs.org/"&gt;xterm.js&lt;/a&gt; for the frontend.&lt;/li&gt;
&lt;li&gt;Networked over websockets.&lt;/li&gt;
&lt;li&gt;Supports TUI applications like &lt;code&gt;htop&lt;/code&gt; / &lt;code&gt;ncdu&lt;/code&gt; / &lt;code&gt;nvim&lt;/code&gt; (and &lt;a href="https://crates.io/crates/runnables-cli/1.3.7"&gt;runnables-cli&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Each shell history / active running process is persisted on periphery after the client disconnects, making them suitable for long running tasks (you can run servers from them etc)&lt;/li&gt;
&lt;li&gt;The shell starts as the same linux user that &lt;code&gt;periphery&lt;/code&gt; runs as.&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;systemctl --user&lt;/code&gt; installs, you login as &lt;strong&gt;your linux user&lt;/strong&gt; on the host (complete with any custom prompt).&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;root&lt;/strong&gt; systemctl installs, you would login as root linux user. You should consider creating a custom &lt;code&gt;periphery&lt;/code&gt; user with intented permissions, and updating your &lt;code&gt;periphery.service&lt;/code&gt; systemctl config to use this user instead: &lt;a href="https://bbs.archlinux.org/viewtopic.php?id=162297"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For container Periphery, you connect to shell inside periphery container. The functionality will be more limited, but you can still communicate with docker socket in there (its mounted in), and &lt;code&gt;docker exec&lt;/code&gt; into containers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The terminals can have &lt;strong&gt;mutliple Komodo users connected at once&lt;/strong&gt;, and their view is synced.&lt;/li&gt;
&lt;li&gt;If Periphery is restarted, the Terminal sessions will be lost, as they are child processes of periphery.&lt;/li&gt;
&lt;li&gt;User must be admin or have &lt;code&gt;Write&lt;/code&gt; permission on Server to connect to terminals&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;disable_terminals&lt;/code&gt; (&lt;code&gt;PERIPHERY_DISABLE_TERMINALS&lt;/code&gt;) in periphery config to &lt;strong&gt;disable this functionality&lt;/strong&gt; on particular servers.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy access to &lt;strong&gt;&lt;code&gt;docker exec -it&lt;/code&gt;&lt;/strong&gt; (container shell access) from Container page, Terminal tab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Deployment / Stack&lt;/strong&gt;: Adds the Terminal tab to Deployments and Stack services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Configurable shell command inside container, eg &lt;code&gt;sh&lt;/code&gt; or &lt;code&gt;bash&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Screenshot 2025-04-26 at 12 20 42â€¯AM" src="https://github.com/user-attachments/assets/5fa56a3e-bf14-44dd-abb6-193cdcbf8b49" /&gt;
&lt;img alt="Screenshot 2025-04-27 at 3 59 41â€¯PM" src="https://github.com/user-attachments/assets/483e8dd5-0739-4fc3-b63a-aedd7f8e2299" /&gt;
&lt;img alt="Screenshot 2025-04-26 at 12 20 29â€¯AM" src="https://github.com/user-attachments/assets/8265c420-c829-4114-b2b1-9a784241f983" /&gt;&lt;/p&gt;</content>
    <link href="https://github.com/moghtech/komodo/releases/tag/v1.17.4" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/moghtech/komodo/releases/tag/v1.17.5</id>
    <title>New release for Komodo: Komodo v1.17.5</title>
    <updated>2025-05-04T18:17:06-04:00</updated>
    <author>
      <name>moghtech/komodo</name>
    </author>
    <content>&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;p&gt;ðŸš¨ This release &lt;strong&gt;removes support for the ServerTemplate resource&lt;/strong&gt;. It was an interesting experiment, but ultimately I feel cloud server creation is outside of the scope of Komodo, it wasn't a very refined flow, and is better accomplished using other IAC tools such as OpenTofu.&lt;/p&gt;
&lt;p&gt;ðŸš¨ Container exec is now enabled even if &lt;code&gt;disable_terminals = true&lt;/code&gt;. This allows users to still use container exec while disabling general terminals. If you don't want to allow container exec, you now have to use &lt;code&gt;disable_container_exec&lt;/code&gt; in &lt;code&gt;periphery.config.toml&lt;/code&gt; (Env: &lt;code&gt;PERIPHERY_DISABLE_CONTAINER_EXEC=true&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;ðŸš¨ &lt;code&gt;ssl_enabled&lt;/code&gt; in &lt;code&gt;periphery.config.toml&lt;/code&gt; (Env: &lt;code&gt;PERIPHERY_SSL_ENABLED&lt;/code&gt;) now &lt;strong&gt;defaults to true&lt;/strong&gt;. You should update your server address to use https if you haven't yet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Websocket&lt;/strong&gt;: Add &lt;code&gt;disable_websocket_reconnect = true&lt;/code&gt; to &lt;code&gt;core.config.toml&lt;/code&gt; (Env: &lt;code&gt;KOMODO_DISABLE_WEBSOCKET_RECONNECT=true&lt;/code&gt;) if your websocket is causing issues. You can still click the connected indicator in the topbar to manually trigger reconnect. The reconnect logic has also improved to make sure reconnect attempts only happen every 5s, so you might want to try it out before disabling reconnect. Re #368.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UI&lt;/strong&gt;: Improve &lt;strong&gt;renaming&lt;/strong&gt; visibility / intuitiveness&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now you rename by &lt;strong&gt;clicking on the name in the header&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Lots of people didn't see the previous rename function until it was pointed out, hopefully this makes it easier to figure out.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stack&lt;/strong&gt;: Add the &lt;code&gt;BatchPullStack&lt;/code&gt; execution for use in Actions / Procedures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Terminals can now be started using your &lt;strong&gt;shell of choice&lt;/strong&gt; (before it was always &lt;code&gt;bash&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Implemented the &lt;code&gt;execute_terminal&lt;/code&gt; api to send command to your Terminals over HTTP call. See below for details.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Execute Terminal&lt;/h2&gt;
&lt;p&gt;One use case I had in mind for terminals is to have an easy way to handle a simple system update task, say running &lt;code&gt;sudo apt upgrade -y&lt;/code&gt;, on a schedule. To do this, I needed a way to interact with terminals from an Action. Now you can do this using &lt;code&gt;komodo.execute_terminal&lt;/code&gt;. For example, a simple Action to update all your servers and consolidate / save the logs:&lt;/p&gt;
&lt;p&gt;```ts
const servers = await komodo.read("ListServers", {
  query: { tags: ["auto-update"] },
});&lt;/p&gt;
&lt;p&gt;for (const server of servers) {
  console.log();
  console.log("------------------");
  console.log("Updating", server.name);
  await komodo.write("CreateTerminal", {
    server: server.name,
    name: "apt-upgrade",
    command: "bash",
    recreate: Types.TerminalRecreateMode.DifferentCommand,
  });
  await komodo.execute_terminal(
    {
      server: server.name,
      terminal: "apt-upgrade",
      command:
        "sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y",
    },
    {
      onLine: console.log,
      onFinish: (code) =&amp;gt; console.log("Finished:", code),
    },
  );
}
```&lt;/p&gt;
&lt;p&gt;Note. It is necessary to &lt;code&gt;CreateTerminal&lt;/code&gt; before you can execute on it, as shown above. Setting &lt;code&gt;recreate: Types.TerminalRecreateMode.DifferentCommand&lt;/code&gt; will make it so it does not fail if the terminal already exists, and only recreates the terminal if it was started with a different root command. This allows you to reuse the same terminal and collect the output for later viewing. You can also use &lt;code&gt;Types.TerminalRecreateMode.Always&lt;/code&gt; to always run on a fresh terminal.&lt;/p&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The API now supports the &lt;strong&gt;Path&lt;/strong&gt; calling convention, allowing for the request &lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt; to be specified in the &lt;strong&gt;URL path&lt;/strong&gt;, which is a bit more concise. For example calling &lt;a href="https://docs.rs/komodo_client/latest/komodo_client/api/execute/struct.DeployStack.html"&gt;DeployStack&lt;/a&gt;:
```&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Path calling convention (New)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;curl --header (unchanged) \
    --data '{ "stack": "my-stack", "services": ["server"] }' \ # &amp;lt;- data just matches the rust struct
    https://komodo.example.com/execute/DeployStack # &amp;lt;- request type in path&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Type-params calling convention (Old, but still supported)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;curl --header (unchanged) \
    --data '{ "type": "DeployStack", "params": { "stack": "my-stack", "services": ["server"] } }' \
    https://komodo.example.com/execute
```
- This is not breaking, the previous way of calling the API continues to be supported.
- The Frontend interface now uses the path based calling convention, as it is much easier to see what calls are happening from the browser devtools during development. That was the main motivation for this feature.
- There isn't any change to the &lt;a href="https://crates.io/crates/komodo_client"&gt;rust&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/komodo_client"&gt;typescript&lt;/a&gt; clients.&lt;/p&gt;</content>
    <link href="https://github.com/moghtech/komodo/releases/tag/v1.17.5" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/moghtech/komodo/releases/tag/v1.18.0</id>
    <title>New release for Komodo: Komodo v1.18.0</title>
    <updated>2025-05-30T16:12:54-04:00</updated>
    <author>
      <name>moghtech/komodo</name>
    </author>
    <content>&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;p&gt;ðŸš¨ This release moves &lt;strong&gt;official support to FerretDB v2&lt;/strong&gt;. Users who deployed v1.17.5 or before using Postgres / Sqlite option are using FerretDB v1 and should &lt;strong&gt;eventually&lt;/strong&gt; migrate using the &lt;a href="https://github.com/moghtech/komodo/blob/main/bin/util/docs/copy-database.md#ferretdb-v2-update-guide"&gt;FerretDB v2 Update Guide&lt;/a&gt;. Note that this is &lt;strong&gt;not a change to Komodo itself&lt;/strong&gt;, only to the list of supported Mongo stand-ins. Users can update to 1.18.0 and continue to use FerretDB v1 if they wish.&lt;/p&gt;
&lt;p&gt;ðŸš¨ Admins managing user permissions may need to modify the user access rules. In particular, &lt;strong&gt;container logs&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;docker inspect&lt;/code&gt;&lt;/strong&gt; on containers, and &lt;strong&gt;terminal access&lt;/strong&gt; are now gated behind additional permissions (for non admin users).&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Specific Permissions&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The main purpose of this release is to refine the access control / permissions system in Komodo. In 1.17.5 and before, access to resources was controlled only via access level (&lt;code&gt;Read&lt;/code&gt;, &lt;code&gt;Execute&lt;/code&gt;, &lt;code&gt;Write&lt;/code&gt;). These levels provide access to the associated &lt;code&gt;/read&lt;/code&gt;, &lt;code&gt;/execute&lt;/code&gt;, and &lt;code&gt;/write&lt;/code&gt; methods on resources, and it worked pretty well to provide RBAC.&lt;/p&gt;
&lt;p&gt;Now with more potentially sensitive features, this is not quite enough to provide granular access control. To address this, &lt;code&gt;specific&lt;/code&gt; permissions have been introduced &lt;em&gt;in addition&lt;/em&gt; to &lt;code&gt;Read&lt;/code&gt;, &lt;code&gt;Execute&lt;/code&gt;, and &lt;code&gt;Write&lt;/code&gt; levels.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Logs&lt;/code&gt;&lt;/strong&gt;: User can retrieve docker / docker compose logs on the associated resource.&lt;/li&gt;
&lt;li&gt;Valid on &lt;code&gt;Server&lt;/code&gt;, &lt;code&gt;Stack&lt;/code&gt;, &lt;code&gt;Deployment&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For admins wanting this permission by default for all users with read permissions, see below on default user groups.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/strong&gt;:  User can "inspect" docker containers.&lt;/li&gt;
&lt;li&gt;Valid on &lt;code&gt;Server&lt;/code&gt;, &lt;code&gt;Stack&lt;/code&gt;, &lt;code&gt;Deployment&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;On Servers&lt;/strong&gt;: Access to this api will expose all container environments on the given server,
  and can easily lead to secrets being leaked to unintended users if not protected.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Terminal&lt;/code&gt;&lt;/strong&gt;: User can access the associated resource's terminal.&lt;/li&gt;
&lt;li&gt;If given on a &lt;code&gt;Server&lt;/code&gt;, this allows server level terminal access, and all container exec priviledges (Including attached &lt;code&gt;Stacks&lt;/code&gt; / &lt;code&gt;Deployments&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;If given on a &lt;code&gt;Stack&lt;/code&gt; or &lt;code&gt;Deployment&lt;/code&gt;, this allows container exec terminal (even without &lt;code&gt;Terminal&lt;/code&gt; on &lt;code&gt;Server&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Attach&lt;/code&gt;&lt;/strong&gt;: User can "attach" &lt;em&gt;other resources&lt;/em&gt; to the resource.&lt;/li&gt;
&lt;li&gt;If given on a &lt;code&gt;Server&lt;/code&gt;, allows users to attach &lt;code&gt;Stacks&lt;/code&gt;, &lt;code&gt;Deployments&lt;/code&gt;, &lt;code&gt;Repos&lt;/code&gt;, and &lt;code&gt;Builders&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If given on &lt;code&gt;Build&lt;/code&gt;, allows users to attach the Build to Deployments&lt;/li&gt;
&lt;li&gt;If given on a &lt;code&gt;Builder&lt;/code&gt;, allows users to attach &lt;code&gt;Builds&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Processes&lt;/code&gt;&lt;/strong&gt;: User can retrieve the full running process list on the &lt;code&gt;Server&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above &lt;code&gt;specific&lt;/code&gt; permissions are defined in a list alongside their &lt;code&gt;level&lt;/code&gt;. This list is open for future expansion / and the associated implementations may be refined in future releases as well. The list is also given here: https://komo.do/docs/permissioning#specific-permissions.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Default User Groups&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Sometimes you will want to set a "baseline" set of permissions that all users will have on the Komodo instance. Previously this could only be done in very barebones way, by setting &lt;code&gt;KOMODO_TRANSPARENT_MODE=true&lt;/code&gt; on the Komodo Core container. This would give all users a base level of "Read" on all resources.&lt;/p&gt;
&lt;p&gt;In addition to the above permissions features, this release also adds an &lt;code&gt;everyone&lt;/code&gt; mode to User Groups. If you enable this mode on a User Group, then all users will inherit those permissions as a base.&lt;/p&gt;
&lt;h3&gt;TOML Examples&lt;/h3&gt;
&lt;p&gt;As before, you are able to manage User Groups in Resource Syncs.&lt;/p&gt;
&lt;p&gt;```toml&lt;/p&gt;
&lt;h1&gt;Can define default rules in the Everyone group&lt;/h1&gt;
&lt;p&gt;[[user_group]]
name = "Everyone"
everyone = true
 # Can see servers, but no Logs / Inspect / Terminal permission
all.Server = "Read"&lt;/p&gt;
&lt;h1&gt;This doesn't elevate specific stacks from None permissions,&lt;/h1&gt;
&lt;h1&gt;but if the user gets greater than Read from another permission,&lt;/h1&gt;
&lt;h1&gt;they will inherit the specific permissions&lt;/h1&gt;
&lt;p&gt;all.Stack = { level = "None", specific = ["Inspect", "Logs", "Terminal"] }
all.Deployment = { level = "None", specific = ["Inspect", "Logs", "Terminal"] }&lt;/p&gt;
&lt;h1&gt;Allow users to see all Builders, and attach builds to them.&lt;/h1&gt;
&lt;p&gt;all.Builder = { level = "Read", specific = ["Attach"] }&lt;/p&gt;
&lt;p&gt;[[user_group]]
name = "Stack Read"
users = ["user1", "user2"]&lt;/p&gt;
&lt;h1&gt;Because of the "Everyone" group, don't need to redefine&lt;/h1&gt;
&lt;h1&gt;the specific permissions. User will have "Inspect", "Logs", etc.&lt;/h1&gt;
&lt;p&gt;all.Stack = "Read"&lt;/p&gt;
&lt;p&gt;[[user_group]]
name = "Immich Manager"
users = ["user1", "user2"]&lt;/p&gt;
&lt;h1&gt;Give per-service management to select users&lt;/h1&gt;
&lt;p&gt;permissions = [
  { target.type = "Server", target.id = "immich-server", level = "Write", specific = ["Logs", "Inspect", "Terminal"] },
  { target.type = "Stack", target.id = "immich", level = "Write"  }
]&lt;/p&gt;
&lt;p&gt;[[user_group]]
name = "Dev Manager"
users = ["user1", "user2"]&lt;/p&gt;
&lt;h1&gt;Manage wildcard access to specific resources, in this case with the &lt;code&gt;dev-&lt;/code&gt; name prefix.&lt;/h1&gt;
&lt;h1&gt;Note. Doesn't work with Sync "Commit". Only "Execute" direction.&lt;/h1&gt;
&lt;p&gt;permissions = [
  { target.type = "Server", target.id = "dev-&lt;em&gt;", level = "Read" },
  { target.type = "Deployment", target.id = "dev-&lt;/em&gt;", level = "Write"  },
  { target.type = "Build", target.id = "dev-*", level = "Write"  },
]
```&lt;/p&gt;
&lt;h3&gt;Misc.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Remove limitations on &lt;strong&gt;name&lt;/strong&gt;. Names can now include Capital letters and spaces. They still have to be unique.&lt;ul&gt;
&lt;li&gt;Also can use any name for &lt;strong&gt;Procedures&lt;/strong&gt;, &lt;strong&gt;Actions&lt;/strong&gt;, &lt;strong&gt;Resource Syncs&lt;/strong&gt;, &lt;strong&gt;Builders&lt;/strong&gt; and &lt;strong&gt;Alerters&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Stacks / Deployments / Builds / Repos &lt;strong&gt;still have the same naming restrictions&lt;/strong&gt; (no capitals / spaces)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Alerter&lt;/strong&gt;: Ntfy endpoints now support configuring email. Note that you must also make sure SMTP is configured on the Ntfy server. By @FelixBreitweiser in #493 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource Sync&lt;/strong&gt;: Fix issue with User Groups showing "Pending" repeatedly / eroneously.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: Fix the inline rename behavior when renaming multiple resources in a row.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Startup log&lt;/strong&gt;: Specify &lt;code&gt;pretty_startup_config = true&lt;/code&gt; to get more human readable initial config log.&lt;ul&gt;
&lt;li&gt;Core Env: &lt;code&gt;KOMODO_PRETTY_STARTUP_CONFIG=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Periphery Env: &lt;code&gt;PERIPHERY_PRETTY_STARTUP_CONFIG=true&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Screenshot 2025-05-30 at 12 25 55â€¯PM" src="https://github.com/user-attachments/assets/c05dbb81-3db6-4a90-bb4b-f86bf8fcadb8" /&gt;&lt;/p&gt;</content>
    <link href="https://github.com/moghtech/komodo/releases/tag/v1.18.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/moghtech/komodo/releases/tag/v1.18.1</id>
    <title>New release for Komodo: Komodo v1.18.1</title>
    <updated>2025-06-07T02:25:20-04:00</updated>
    <author>
      <name>moghtech/komodo</name>
    </author>
    <content>&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;h3&gt;Schedules Page&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added a dedicated &lt;strong&gt;Schedules page&lt;/strong&gt; to provide an overview of all your scheduled actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Server Alerting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Server health alerts will now only be opened after &lt;strong&gt;2 consecutive out-of-bounds conditions&lt;/strong&gt;.&lt;ul&gt;
&lt;li&gt;This helps a lot to reduce noise, like intermittent unreachable alerts and short CPU usage spikes&lt;/li&gt;
&lt;li&gt;If you turned off alerts to reduce noise, you can try turning them back on and see how it is now.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Commits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Commits made by Komodo &lt;strong&gt;no longer use &lt;code&gt;--force&lt;/code&gt;&lt;/strong&gt; in the push command.&lt;ul&gt;
&lt;li&gt;This should prevent any more issues like #501&lt;/li&gt;
&lt;li&gt;If you run into issues pushing, it depends on the resource type.&lt;ul&gt;
&lt;li&gt;For Stacks, can temporarily enable the Reclone option, and Deploy. Afterwards can try commit again.&lt;/li&gt;
&lt;li&gt;For Syncs / Builds, you should be able to use the refresh button in header and try again. Otherwise you can recreate the repo cache volume.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Stack / Build / Repo / Sync&lt;/strong&gt;: Add &lt;strong&gt;url links&lt;/strong&gt; for attached repos in the resource headers / tables.&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Github only&lt;/strong&gt;: links to correct branch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stack / Deployment&lt;/strong&gt;: Add dedicated "Deploying" state to improve the feedback&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: Add Core / Periphery version mismatch indicator&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repo&lt;/strong&gt;: Fix "On Pull" command during &lt;code&gt;PullRepo&lt;/code&gt; operation re #580 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stack&lt;/strong&gt;: Run "Pre Deploy" command &lt;em&gt;before&lt;/em&gt; &lt;code&gt;docker compose config&lt;/code&gt; in #584 by @undaunt &lt;ul&gt;
&lt;li&gt;Allows for easier integrations re #324&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;UI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clean up headers / quick links&lt;/li&gt;
&lt;li&gt;Improve frontend loading time re dependency loading&lt;/li&gt;
&lt;li&gt;Move &lt;strong&gt;Builders / Alerters out of sidebar&lt;/strong&gt; and &lt;strong&gt;into settings&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img width="1649" alt="Screenshot 2025-06-06 at 11 03 54â€¯PM" src="https://github.com/user-attachments/assets/35e7734f-f467-4c52-88f0-bc1cb986988f" /&gt;&lt;/p&gt;</content>
    <link href="https://github.com/moghtech/komodo/releases/tag/v1.18.1" rel="alternate"/>
  </entry>
</feed>
