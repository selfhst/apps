<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Socialhome Releases</title>
  <updated>2025-06-25T18:33:29.386220-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://gitlab.com/jaywink/socialhome/-/releases/v0.10.0</id>
    <title>New release for Socialhome: v0.10.0</title>
    <updated>2019-10-06T20:28:40+00:00</updated>
    <author>
      <name>jaywink/socialhome</name>
    </author>
    <content>&lt;h2&gt;0.10.0 (2019-10-06)&lt;/h2&gt;
&lt;h3&gt;Added&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initial ActivityPub support has landed!&lt;/p&gt;
&lt;p&gt;Basic federation support with the ActivityPub protocol. There are
likely to be many bugs and incompatibilities with this first release
which will be ironed out in the next few releases.&lt;/p&gt;
&lt;p&gt;Importantly, Socialhome defaults to ActivityPub should a remote
profile support both ActivityPub and Diaspora protocols. This means
federation across Socialhome instances will use ActivityPub.&lt;/p&gt;
&lt;p&gt;Considerable effort was put into refactoring Socialhome internals to
work with multiple protocols. This refactoring affects mostly the
internals of Socialhome with only minor visual changes. Some of
those include changes in URL's and fallback display names for
non-local profiles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added Tags API. In addition to listing Tag objects, it allows
    authenticated users to follow and unfollow tags.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Profile API now includes a list of tags followed for logged in
    users.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is now possible to follow and unfollow tags from a tag stream
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/465"&gt;#465&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Content from followed tags is available under a new "Tags" stream.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It's now possible to disable incoming &lt;a href="https://git.feneas.org/jaywink/social-relay"&gt;relay
    system&lt;/a&gt; integration by
    setting the environment variable &lt;code&gt;SOCIALHOME_RELAY_SCOPE&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/94"&gt;#94&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;User profile now has a link to a new followers contacts page. This
    is limited to the logged in user only.&lt;/li&gt;
&lt;li&gt;Added a model for federation payloads for debugging purposes. If the
    "log all federation payloads" admin setting is on, incoming payloads
    will now also be available in the database via the admin pages, in
    addition to the log file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Changed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Backwards incompatible&lt;/strong&gt;. Python 3.6 is now the lowest supported
    Python version. Please do not try to upgrade Socialhome to this
    release before updating your Python virtualenv, if running an older
    Python!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code repository moved to the &lt;a href="https://git.feneas.org/socialhome/socialhome"&gt;Feneas
    GitLab&lt;/a&gt; which offers a
    richer set of features compared to GitHub. What is Feneas? &lt;a href="https://feneas.org/hello-federation/"&gt;Check
    this post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Code will still be mirrored to GitHub so participation through there
is still very much welcome. So you can still fork the repository on
GitHub and submit a pull request. Issues however will be available
only on the GitLab server to avoid these getting out of sync between
the servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The behaviour of the &lt;code&gt;delete_users_and_profiles&lt;/code&gt; management command
    has been changed to lock remote profiles by default instead of
    deleting them. This is more efficient for spam control as deleted
    profiles just appear back. The lock option can still be set as false
    to delete the profile which is a good option for example when
    cleaning data of remote profiles on request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Breaking change&lt;/strong&gt;. API changes.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/451"&gt;#451&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Profile API has been migrated to use UUID's instead of ID's.&lt;/p&gt;
&lt;p&gt;All API endpoints will be receiving this change which is done
while the API has a limited number of consumers and will be one
of the last planned breaking changes planned before a 1.0 API
can be announced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Profile API following and unfollowing endpoints have changed.&lt;/p&gt;
&lt;p&gt;The action &lt;code&gt;add_follower&lt;/code&gt; has been renamed to &lt;code&gt;follow&lt;/code&gt; and
&lt;code&gt;remove_follower&lt;/code&gt; to &lt;code&gt;unfollow&lt;/code&gt;. The change reflects the change
of the endpoints themselves. Now to add a follower one does a
POST to the &lt;code&gt;follow&lt;/code&gt; of the profile that one wants to follow,
instead of doing a POST to the &lt;code&gt;add_follower&lt;/code&gt; endpoint of ones
own profile. Same change has been done for the follower removal
endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Streams profile API's have moved to using UUID's instead of
    ID's.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make profile default visibility public
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/515"&gt;#515&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This fixes an issue where new profiles can follow others but the
others cannot follow back, since the default was SELF. For now, make
all new profiles public by default. Later the visibility setting
should be moved from the profile to profile fields themselves. Some
core identity will always need to be public but what the profile
shares could be controlled.&lt;/p&gt;
&lt;p&gt;Also make remote profiles always locally public to avoid situations
where a user can see the post but can't see the local profile. Any
profile that federates to us is public to some extent since it left
the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Global search now works also with ActivityPub ID's to fetch a remote
    profile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Added a few additional HTML elements to content cleanup whitelist:
    tags span, p, br and attribute class on span.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;API docs regression fixed
    (&lt;a href="https://github.com/jaywink/socialhome/issues/509"&gt;#509&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix internal server error for anonymous user for certain internal
    user pages
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/518"&gt;#518&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Timeout of the pre-calculated stream cache cleanup job has been
    extended so that it doesn't timeout on larger servers.&lt;/li&gt;
&lt;li&gt;Nested replies are now correctly shown as replies to the root level
    content instead of being hidden from view.&lt;/li&gt;
&lt;li&gt;Removed unnecessary federation of replies to local root authors.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed quick reply possibility for non-public content. This fixes
    an issue of non-public replies created with the quick reply editor
    not federating.&lt;/p&gt;
&lt;p&gt;While the API support is being added needed by the quick reply
editor for non-public content, only the full editor can be used for
non-public replies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix retraction of limited visibility content sent out to the
    federation layer.&lt;/p&gt;
&lt;p&gt;There was a bug where limited visibility content (added in 0.9.0)
retractions were not sent out correctly. This was caused by the
usage of the Django &lt;code&gt;post_delete&lt;/code&gt; signal to handle the retraction.
This works for public content since all the information is present
immediately after the delete for the background jobs, even if the
database entry has been deleted. Unfortunately for limited content
this did not work since they store visibilities to the limited
content in a separate table. Due to the (awesome!) way Django
relations work, the entries for the visibilities got deleted from
the database before the &lt;code&gt;post_delete&lt;/code&gt; signal got fired.&lt;/p&gt;
&lt;p&gt;Content retraction is now fired off into a background task in the
Django &lt;code&gt;pre_delete&lt;/code&gt; hook, which means the limited visibilities data
is still available in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Internal changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Removed &lt;code&gt;User&lt;/code&gt; relationship fields. These were migrated to &lt;code&gt;Profile&lt;/code&gt;
    a long time ago.&lt;/li&gt;
&lt;li&gt;Heavy refactoring of Vue frontend store.&lt;/li&gt;
&lt;li&gt;Django bumped to 2.2.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://gitlab.com/jaywink/socialhome/-/releases/v0.10.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/jaywink/socialhome/-/releases/v0.11.0</id>
    <title>New release for Socialhome: v0.11.0</title>
    <updated>2019-12-15T00:26:38+00:00</updated>
    <author>
      <name>jaywink/socialhome</name>
    </author>
    <content>&lt;h2&gt;0.11.0 (2019-12-15)&lt;/h2&gt;
&lt;h3&gt;Added&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Searching of users on the ActivityPub protocol now works using a
    handle (ie &lt;code&gt;user@domain.tld&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Shared content in the streams now contain the name and link to the
    profile of the sharer.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django-Silk is now available for developers to turn on for their
    instance.&lt;/p&gt;
&lt;p&gt;To turn on, set the environment variable &lt;code&gt;SOCIALHOME_SILKY=True&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users API now has an admin endpoint to return recently active users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Changed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UI changes:&lt;ul&gt;
&lt;li&gt;The stamped element (the first stream element with information
    about the stream or profile information) is now 100% wide in all
    situations. The profile picture has also been made larger.&lt;/li&gt;
&lt;li&gt;The author bar has been moved from the bottom of the content to
    the top of the content.&lt;/li&gt;
&lt;li&gt;Clicking a profile name in the author bar now pops up the author
    federation ID and reaction buttons instead of expanding them.
    This saves having to re-render the whole stream grid.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All streams now properly push out websocket notifications on new
    content.&lt;/p&gt;
&lt;p&gt;Previously only certain streams knew how to push notifications on
new content to the client. Now all streams will know how to do this.
Additionally they will respect user preferences in the future when
hiding of content from users is added. Shared content also gets a
notification pushed out as other content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't process received shares if they point to a non-public content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Don't show a share icon for own content, unless there is a counter
    to show.&lt;/li&gt;
&lt;li&gt;Fix follow/unfollow of profiles from the search page.&lt;/li&gt;
&lt;li&gt;Don't raise a 500 error when Diaspora remotes try to fetch a content
    whose author has no &lt;code&gt;handle&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Don't raise a 500 error when an attempt is made to view a profile
    with an invalid profile identifier&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix a major race issue with the &lt;code&gt;through&lt;/code&gt; value calculation for
    shared content in streams
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/558"&gt;#558&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;When calculating &lt;code&gt;through&lt;/code&gt; values (ie what share caused a content to
appear in the stream), there was a race condition between processing
the saved share and a remote fetched shared content. Values are now
correctly calculates irregardless of saving order to provide correct
"shared by" information for streams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't raise a 500 error on fetch of content using a malformed
    identifier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix inbound federation timing issue with ActivityPub platforms
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/563"&gt;#563&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Signature verification time delta check if a background worker
didn't process the inbound payload fast enough, which led to
rejected payloads. Time delta check has now been relaxed to allow at
most 24 hour old signatures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve performance of profile streams and fetching of replies by
    splitting the database queries into multiple queries instead of one
    larger one.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/562"&gt;#562&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;API changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Backwards incompatible&lt;/strong&gt;: Removed duplicated
    &lt;code&gt;user_following_author&lt;/code&gt; from the Content API since it is included in
    the serialized &lt;code&gt;author&lt;/code&gt; as &lt;code&gt;user_following&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Stream API results now contain a &lt;code&gt;through_author&lt;/code&gt; object in the case
    that the content is in the stream via share.&lt;/li&gt;
&lt;li&gt;The Stream API endpoints now accept an accept_ids query parameter,
    which should be a list of content ID's to fetch from this particular
    stream. This allows filling the stream with new items in the stream
    context without making multiple fetches.&lt;/li&gt;
&lt;li&gt;Replaced deprecated &lt;code&gt;django-rest-swagger&lt;/code&gt; API docs module with
    &lt;code&gt;drf-yasg&lt;/code&gt;. The new module provides not only Swagger but also ReDoc
    API docs. We've chosen ReDoc for the default docs mounted at &lt;code&gt;/api/&lt;/code&gt;
    on each instance. Swagger is still available at &lt;code&gt;/api/swagger/&lt;/code&gt;.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/537"&gt;#537&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Internal changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Django Channels upgraded from 1.x to 2.x version. This freed up
    various pinned dependencies like Redis and RQ to be upgraded to
    their latest versions. This also makes it unnecessary to run a
    Channels worker process as before. That has already been removed
    from the &lt;code&gt;circus.ini&lt;/code&gt; file. If you run the processes manually, the
    process does not need executing any more.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://gitlab.com/jaywink/socialhome/-/releases/v0.11.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/jaywink/socialhome/-/releases/v0.11.1</id>
    <title>New release for Socialhome: v0.11.1</title>
    <updated>2019-12-30T18:26:36+00:00</updated>
    <author>
      <name>jaywink/socialhome</name>
    </author>
    <content>&lt;h2&gt;0.11.1 (2019-12-30)&lt;/h2&gt;
&lt;p&gt;Security
........&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Upgrade Django to fix CVE-2019-19844.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixed
.....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support tag streams for non-ascii tags. (&lt;code&gt;#517 &amp;lt;https://git.feneas.org/socialhome/socialhome/issues/517&amp;gt;&lt;/code&gt;_)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tags which fail to generate a slugified name (ie for example Russian alphabet tags) are now supported
  as streams. This also fixes the search internal server error when searching for a tag which fails to
  generate a stream URL.&lt;/p&gt;</content>
    <link href="https://gitlab.com/jaywink/socialhome/-/releases/v0.11.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/jaywink/socialhome/-/releases/v0.12.0</id>
    <title>New release for Socialhome: v0.12.0</title>
    <updated>2020-12-11T22:31:21+00:00</updated>
    <author>
      <name>jaywink/socialhome</name>
    </author>
    <content>&lt;h2&gt;0.12.0 (2019-12-12)&lt;/h2&gt;
&lt;h3&gt;Added&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The Content API now has full support for all visibility levels,
    including specifying recipients for limited content.&lt;/li&gt;
&lt;li&gt;The new publisher written in Vue is now feature complete with the
    current one. If you would like to try it out, go to your account
    settings and enable the new publisher. After a short trial period,
    it will become default and the old Django template code will be
    removed.&lt;/li&gt;
&lt;li&gt;Admins can now disable the Django admin error emails by setting the
    environment value &lt;code&gt;SOCIALHOME_LOG_DISABLE_ADMIN_EMAILS=True&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Outbound payloads can now also be logged by toggling the relevant
    preference in the admin. When enabled, all outbound payloads will be
    saved for debugging purposes in the "Payloads" model and available
    via the admin.&lt;/li&gt;
&lt;li&gt;Fetching of unknown remote content using ActivityPub URL id's now
    works. Just paste the remote ActivityPub content URL to the search
    bar to fetch it from compatible platforms.&lt;/li&gt;
&lt;li&gt;Add a scheduled task to clean up old scheduled jobs in Redis.&lt;/li&gt;
&lt;li&gt;Added Django-Redisboard. This gives admins some visibility into the
    way Socialhome uses Redis via the admin pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Changed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Content interaction actions and icons have been fully redesigned to
    improve readability and to make it easier to interact with other
    peoples content.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/574"&gt;#574&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Root level content now has "reply" and "share" actions more
    clearly on the left hand side of the content interactions area
    below the content text.&lt;/li&gt;
&lt;li&gt;The new shares action now immediately shares (or unshares, if
    shared) instead of requiring a second action click.&lt;/li&gt;
&lt;li&gt;The shares counter no longer acts as a share action.&lt;/li&gt;
&lt;li&gt;Both the reply action and the replies counter expand the replies
    container.&lt;/li&gt;
&lt;li&gt;Each reply now has a reply action as well. This is located on
    the right hand side of the content interactions area below the
    reply. This allows users to target their reply to a particular
    reply.&lt;/li&gt;
&lt;li&gt;Replies now automatically insert mentions into the reply editor.
    For replies on root content, the root content author is
    mentioned. For replies on replies, both the root content author
    and the replied reply author are mentioned. The mentions can of
    course be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully these changes will make not only interacting easier, but
also make interactions from Socialhome more compatible with other
platforms like the microblogging side of the Fediverse. Feedback on
these is most welcome!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve rendering of outgoing mentions towards the ActivityPub
    network.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/572"&gt;#572&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Mentions from Socialhome now get rendered as links in outbound HTML
format payloads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Render URL's in outgoing payloads towards the ActivityPub network as
    proper links.
    (&lt;a href="https://git.feneas.org/socialhome/socialhome/issues/572"&gt;#572&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Make link preview images larger and ensure images have a title
    attribute.&lt;/li&gt;
&lt;li&gt;Stop rendering link previews for HTML style mentions that come from
    ActivityPub networks.&lt;/li&gt;
&lt;li&gt;Truncate link preview description to max 500 characters.&lt;/li&gt;
&lt;li&gt;Add a truncated link preview url to the link preview card.&lt;/li&gt;
&lt;li&gt;Don't render link preview image if the same image is already in the
    content text.&lt;/li&gt;
&lt;li&gt;OEmbed for Twitter profile streams is now skipped. Only single
    tweets will be embedded.&lt;/li&gt;
&lt;li&gt;Whitelist some more HTML tags for use in formatting content. All the
    tags that are purely for visual formatting or structuring (like div,
    table, dd) are now whitelisted.&lt;/li&gt;
&lt;li&gt;Totally rewritten publisher! The new publisher is now a part of the
    VueJS based frontend code and is based on the EasyMDE editor. There
    are some additional features like full-screen mode added, for those
    long blog post type content pieces. Thanks to Christophe Henry for
    work on this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix regression in Diaspora follows introduced in 0.11.0. Due to
    stricter validation that was added to outbound payload sending,
    follows to the Diaspora protocol side broke in 0.11.0 (from 11th of
    October in the development branch). All follows/unfollows during
    this period towards remote Diaspora protocol profiles have failed
    and should be retriggered.&lt;/li&gt;
&lt;li&gt;Don't crash loudly incompatible content is fetched via the Diaspora
    protocol fetch view and a document fails to validate.&lt;/li&gt;
&lt;li&gt;Fix an issue in the OEmbed library that caused unnecessary fetches
    to Spotify OEmbed endpoint. Thanks to Alain for reporting this
    issue. (&lt;a href="https://github.com/pyembed/pyembed/issues/64"&gt;upstream
    issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix rendering of quotes. Now rendered in italic and clearly marked
    as quote.&lt;/li&gt;
&lt;li&gt;Stop creating duplicate content items from remote content delivered
    by both ActivityPub and Diaspora protocols. When these refer to each
    other, they will be merged to avoid duplicate content items.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Internal changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Store an Activity on follow/unfollow. This allows retriggering
    follows/unfollows in the event of a regression.&lt;/li&gt;
&lt;li&gt;Move &lt;code&gt;socialhome.content.utils.process_text_links&lt;/code&gt; to the
    &lt;code&gt;federation&lt;/code&gt; library.&lt;/li&gt;
&lt;li&gt;Move the tags extraction logic from &lt;code&gt;Content&lt;/code&gt; model to the
    &lt;code&gt;federation&lt;/code&gt; library.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://gitlab.com/jaywink/socialhome/-/releases/v0.12.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/jaywink/socialhome/-/releases/v0.12.1</id>
    <title>New release for Socialhome: v0.12.1</title>
    <updated>2020-12-11T23:07:43+00:00</updated>
    <author>
      <name>jaywink/socialhome</name>
    </author>
    <content>&lt;h2&gt;0.12.1 (2020-12-12)&lt;/h2&gt;
&lt;h3&gt;Fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix build broken by some Eslint dependencies needing update.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://gitlab.com/jaywink/socialhome/-/releases/v0.12.1" rel="alternate"/>
  </entry>
</feed>
