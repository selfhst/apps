<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Logto Releases</title>
  <updated>2025-06-16T12:33:15.819318-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.24.1</id>
    <title>New release for Logto: v1.24.1</title>
    <updated>2025-02-21T02:50:20-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-02-v2 (1)" src="https://github.com/user-attachments/assets/becf45d6-54e6-486e-bb99-a284e43301d8" /&gt;&lt;/p&gt;
&lt;h2&gt;New connectors:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;X (Twitter) social connector&lt;/li&gt;
&lt;li&gt;Slack social connector&lt;/li&gt;
&lt;li&gt;LinkedIn social connector&lt;/li&gt;
&lt;li&gt;Line social connector&lt;/li&gt;
&lt;li&gt;Amazon social connector&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/logto-io/logto/commit/cb261024b6d8ce1a708d2359d8843aa052aaff01: fix cli add offical connectors command missing connectors bug
  Fix the bug when running the cli commend logto connectors add --official, only 8 connectors are fetched from npm registry.
  This fix update logic to query additional pages of results when fetching connectors from the npm registry.&lt;/li&gt;
&lt;li&gt;https://github.com/logto-io/logto/commit/0b785ee0d8e1156607f5185c51e9a21fbae76a4d: display JWKS URI on application details page&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/logto-io/logto/commit/e7accfdab9c646dfe60dd0728c9566823fe18188: prevent i18n context contamination by using request-scoped instances
  This bug fix resolves a concurrency issue in i18n handling by moving from a global i18next instance to request-scoped instances.&lt;/p&gt;
&lt;h3&gt;Problem&lt;/h3&gt;
&lt;p&gt;When handling concurrent requests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The shared global &lt;code&gt;i18next&lt;/code&gt; instance's language was being modified via &lt;code&gt;changeLanguage()&lt;/code&gt; calls.&lt;/li&gt;
&lt;li&gt;This could lead to race conditions where requests might receive translations in unexpected languages.&lt;/li&gt;
&lt;li&gt;Particularly problematic in multi-tenant environments with different language requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Updated &lt;code&gt;koaI18next&lt;/code&gt; middleware to create a cloned i18next instance for each request.&lt;/li&gt;
&lt;li&gt;Attach the request-scoped instance to Koa context (&lt;code&gt;ctx.i18n&lt;/code&gt;) All subsequent middleware and handlers should now use &lt;code&gt;ctx.i18n&lt;/code&gt; instead of the global &lt;code&gt;i18next&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Maintains the global instance for initialization while preventing cross-request contamination&lt;/li&gt;
&lt;li&gt;a5990ec57: fixes an incorrect condition check in the verification code flow where &lt;code&gt;isNewIdentifier&lt;/code&gt; was using inverted logic for email and phone comparisons.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Corrected &lt;code&gt;isNewIdentifier&lt;/code&gt; boolean logic to use &lt;code&gt;identifier.value !== user.primaryEmail&lt;/code&gt; for email checks&lt;/li&gt;
&lt;li&gt;Fixed phone number comparison to properly use &lt;code&gt;identifier.value !== user.primaryPhone&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;This fixes a regression where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verification codes for existing emails/phones were incorrectly using the&lt;code&gt;BindNewIdentifier&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;New identifiers were mistakenly getting the &lt;code&gt;UserPermissionValidation&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Affected both email and phone verification flows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;28643c1f1: fix the email/phone identifier conflict handling logic during user registration.&lt;/p&gt;
&lt;p&gt;When a user attempts to register with an email/phone that already exists:&lt;/p&gt;
&lt;h3&gt;Previous Behavior&lt;/h3&gt;
&lt;p&gt;"Sign in instead" modal will be shown when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The email/phone identifier has been verified through a verification code validation&lt;/li&gt;
&lt;li&gt;Identifier type (email/phone) was enabled in sign-in methods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This caused an issue when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only password authentication method was enabled in the sign-in method settings.&lt;/li&gt;
&lt;li&gt;When users clicked "Sign in instead" action button, the API call will throw an sign-in method not enabled error. Which is confusing for the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expected behavior: Show the "Email/phone already exists" error modal directly. If only password authentication is enabled. User should not be able to sign in with email/phone directly.&lt;/p&gt;
&lt;h3&gt;Fixed Behavior&lt;/h3&gt;
&lt;p&gt;Shows the "Sign in instead" modal if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The email/phone identifier type is enabled in the sign-in method settings and the verification code is enabled for the identifier.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Otherwise, shows the "Email/phone already exists" error modal directly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bd18da4cf: properly filter WeChat connectors by platform (Web | Native) in SSR sign-in experience settings&lt;/p&gt;
&lt;p&gt;Previously, platform-based social connector filtering was applied during the sign-in experience settings fetch process but not in the SSR sign-in experience data. As a result, platform-specific connectors were not correctly filtered when rendering the page using SSR data.&lt;/p&gt;
&lt;p&gt;This update ensures that the same filtering logic is applied to SSR sign-in experience data, resolving the issue.&lt;/p&gt;
&lt;p&gt;Affected connectors: WeChat Web and WeChat Native.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.24.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.25.0</id>
    <title>New release for Logto: v1.25.0</title>
    <updated>2025-02-28T02:22:39-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-02-03" src="https://github.com/user-attachments/assets/da32196e-e402-4591-9dc2-9e25eb9a6de5" /&gt;&lt;/p&gt;
&lt;h2&gt;Support custom email templates in multiple languages via Management API&lt;/h2&gt;
&lt;p&gt;Introduce localized email template customization capabilities. This update allows administrators to create and manage multiple email templates for different languages and template types (e.g., SignIn, ForgotPassword) via the management API.&lt;/p&gt;
&lt;p&gt;Email connectors now support automatic template selection based on the user's preferred language. If a template is not available in the user's preferred language, the default template will be used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For client-side API requests, like experience API and user account API, the user's preferred language is determined by the &lt;code&gt;Accept-Language&lt;/code&gt; header.&lt;/li&gt;
&lt;li&gt;For server-side API requests, like organization invitation API, email language preference can be set by passing extra &lt;code&gt;locale&lt;/code&gt; parameter in the &lt;code&gt;messagePayload&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The email template selection logic is based on the following priority order:&lt;/li&gt;
&lt;li&gt;Find the template that matches the user's preferred language detected from the request.&lt;/li&gt;
&lt;li&gt;Find the template that matches the default language set in the sign-in experience settings.&lt;/li&gt;
&lt;li&gt;Use the default template set in the email connector settings.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Management API&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PUT /email-templates&lt;/code&gt;: Bulk create or update email templates.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /email-templates&lt;/code&gt;: List all email templates with filter by language and type support.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DELETE /email-templates&lt;/code&gt;: Bulk delete email templates by language and type.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /email-templates/{id}&lt;/code&gt;: Get a specific email template by ID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DELETE /email-templates/{id}&lt;/code&gt;: Delete a specific email template by ID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PATCH /email-templates/{id}/details&lt;/code&gt;: Update email template details by ID.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Supported email connectors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-aliyun-dm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-aws-ses&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-mailgun&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-sendgrid-email&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-smtp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Unsupported email connectors&lt;/h3&gt;
&lt;p&gt;The following email connectors have their templates managed at the provider side and do not support reading templates from Logto.
The user's preferred language will be passed to the provider as the &lt;code&gt;locale&lt;/code&gt; parameter in the email sending request payload. For i18n support, administrators must manage the template selection logic at the provider side.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-postmark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@logto/connector-http-email&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Pass additional context variables to email templates&lt;/h2&gt;
&lt;p&gt;Enhanced email template customization by introducing additional context variables that developers can utilize in message templates. These new variables provide deeper contextual information about the authentication workflow, enabling more personalized and scenario-specific email content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;: &lt;code&gt;UserInfo&lt;/code&gt; - Contains basic user profile data (name, primaryEmail, etc.) for personalization&lt;/li&gt;
&lt;li&gt;&lt;code&gt;application&lt;/code&gt;: &lt;code&gt;ApplicationInfo&lt;/code&gt; - Contains basic application-specific data (name, logo, etc.) for personalization&lt;/li&gt;
&lt;li&gt;&lt;code&gt;organization&lt;/code&gt;: &lt;code&gt;OrganizationInfo&lt;/code&gt; - Contains basic organization-specific data (name, logo, etc.) for personalization&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inviter&lt;/code&gt;: &lt;code&gt;UserInfo&lt;/code&gt; - Contains basic inviter profile data (name, primaryEmail, etc.) for personalization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;| usageType                | Scenario                                                                                                                                                                                                                                                                                                                                                                      | Variables                                                                             |
| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- |
| SignIn                   | Users sign in using their email and verify by entering verification code instead of entering a password.                                                                                                                                                                                                                                                                      | code: string&lt;br/&gt;application: &lt;code&gt;ApplicationInfo&lt;/code&gt;&lt;br/&gt;organization?: &lt;code&gt;OrganizationInfo&lt;/code&gt; |
| Register                 | Users create an account using their email and verify it by entering a verification code sent by Logto to their email.                                                                                                                                                                                                                                                         | code: string&lt;br/&gt;application: &lt;code&gt;ApplicationInfo&lt;/code&gt;&lt;br/&gt;organization?: &lt;code&gt;OrganizationInfo&lt;/code&gt; |
| ForgotPassword           | If users forget their password during login, they can choose to verify their identity using the email they've already verified with Logto.                                                                                                                                                                                                                                    | code: string&lt;br/&gt;application: &lt;code&gt;ApplicationInfo&lt;/code&gt;&lt;br/&gt;organization?: &lt;code&gt;OrganizationInfo&lt;/code&gt; |
| Generic                  | This template can be used as a general backup option for various scenarios, including testing connector configurations and so on.                                                                                                                                                                                                                                             | code: string                                                                          |
| OrganizationInvitation   | Use this template to send users an invitation link to join the organization.                                                                                                                                                                                                                                                                                                  | link: string&lt;br/&gt;organization: &lt;code&gt;OrganizationInfo&lt;/code&gt;&lt;br/&gt;inviter?: &lt;code&gt;UserInfo&lt;/code&gt;            |
| UserPermissionValidation | During app usage, there may be some high-risk operations or operations with a relatively high risk level that require additional user verification, such as bank transfers, deleting resources in use, and canceling memberships. The &lt;code&gt;UserPermissionValidation&lt;/code&gt; template can be used to define the content of the email verification code users receive in these situations. | code: string&lt;br/&gt;user: &lt;code&gt;UserInfo&lt;/code&gt;&lt;br/&gt;application?: &lt;code&gt;ApplicationInfo&lt;/code&gt;                 |
| BindNewIdentifier        | When a user modifies their profile, they may bind an email address to their current account. In this case, the &lt;code&gt;BindNewIdentifier&lt;/code&gt; template can be used to customize the content of the verification email.                                                                                                                                                                   | code: string&lt;br/&gt;user: &lt;code&gt;UserInfo&lt;/code&gt;&lt;br/&gt;application?: &lt;code&gt;ApplicationInfo&lt;/code&gt;                 |&lt;/p&gt;
&lt;p&gt;Check &lt;a href="https://docs.logto.io/connectors/email-connectors/email-templates"&gt;Email templates&lt;/a&gt; for more information on how to use these new context variables in your email templates.&lt;/p&gt;
&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/logto-io/logto/commit/1c7bdf9ba53ab795e6ccb3e99a60b7be39d4f8d4"&gt;1c7bdf9ba&lt;/a&gt;: add legacy password type supporting custom hasing function, credits @fre2d0m&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can now set the type of &lt;code&gt;password_encryption_method&lt;/code&gt; to &lt;code&gt;legacy&lt;/code&gt;, and store info with a JSON string format (containing a hash algorithm, arguments, and an encrypted password) in the &lt;code&gt;password_encrypted&lt;/code&gt; field. By doing this, you can use any hash algorithm supported by Node.js, this is useful when migrating from other password hash algorithms, especially for the ones that include salt.&lt;/p&gt;
&lt;p&gt;The format of the JSON string is as follows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
  ["hash_algorithm", ["argument1", "argument2", ...], "expected_hashed_value"]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And you can use &lt;code&gt;@&lt;/code&gt; as the input password in the arguments.&lt;/p&gt;
&lt;p&gt;For example, if you are using SHA256 with a salt, you can store the password in the following format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
  [
    "sha256",
    ["salt123", "@"],
    "c465f66c6ac481a7a17e9ed5b4e2e7e7288d892f12bf1c95c140901e9a70436e"
  ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then when the user uses the password (&lt;code&gt;password123&lt;/code&gt;), the &lt;code&gt;legacyVerify&lt;/code&gt; function will use the &lt;code&gt;sha256&lt;/code&gt; algorithm with the &lt;code&gt;salt123&lt;/code&gt; and the input password to verify the password.&lt;/p&gt;
&lt;p&gt;In this case, &lt;code&gt;salt123&lt;/code&gt; is the first argument, &lt;code&gt;@&lt;/code&gt; is the input password, then the following code will be executed:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ts
  const hash = crypto.createHash("sha256");
  hash.update("salt123" + "password123");
  const expectedHashedValue = hash.digest("hex");&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/logto-io/logto/commit/b0135bcd3c7385245ec3edc000ede8470b82b006"&gt;b0135bcd3&lt;/a&gt;: enhanced handlebars template processing in the connector to support nested property access in email template variables&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;### Updates&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Updated &lt;code&gt;replaceSendMessageHandlebars&lt;/code&gt; logic to handle nested property paths in template variables&lt;/li&gt;
&lt;li&gt;Latest template processing logic now supports:&lt;ul&gt;
&lt;li&gt;Direct replacement of primitive values (string/number/null/undefined)&lt;/li&gt;
&lt;li&gt;Deep property access using dot-notation (e.g., &lt;code&gt;organization.branding.logoUrl&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Graceful handling of missing properties (replaces with empty string)&lt;/li&gt;
&lt;li&gt;Preservation of original handlebars when variables aren't provided in payload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;### Examples&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Direct replacement&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ts
  replaceSendMessageKeysWithPayload("Your verification code is {{code}}", {
    code: "123456",
  });
  // 'Your verification code is 123456'&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Deep property access&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ts
  replaceSendMessageKeysWithPayload(
    "Your logo is {{organization.branding.logoUrl}}",
    { organization: { branding: { logoUrl: "https://example.com/logo.png" } } }
  );
  // 'Your logo is https://example.com/logo.png'&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Missing properties&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ts
  replaceSendMessageKeysWithPayload(
    "Your logo is {{organization.branding.logoUrl}}",
    { organization: { name: "foo" } }
  );
  // 'Your logo is '&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Preservation of missing variables&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ts
  replaceSendMessageKeysWithPayload(
    "Your application is {{application.name}}",
    {}
  );
  // 'Your application is {{application.name}}'&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/logto-io/logto/commit/c874240258a36c6c46b690e2bce98cbd71265e85"&gt;c87424025&lt;/a&gt;: support role names alongside role IDs in organization user role assignment/replacement with merge capability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This update enhances organization user role management APIs to support role assignment by both names and IDs, improving integration flexibility.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;organizationRoleNames&lt;/code&gt; parameter to:&lt;ul&gt;
&lt;li&gt;POST &lt;code&gt;/api/organizations/{id}/users/{userId}/roles&lt;/code&gt; (assign roles)&lt;/li&gt;
&lt;li&gt;PUT &lt;code&gt;/api/organizations/{id}/users/{userId}/roles&lt;/code&gt; (replace roles)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make both &lt;code&gt;organizationRoleNames&lt;/code&gt; and &lt;code&gt;organizationRoleIds&lt;/code&gt; optional in the above APIs&lt;ul&gt;
&lt;li&gt;If both are not provided, or empty, an invalid data error will be thrown&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Merge logic when both parameters are provided:&lt;ul&gt;
&lt;li&gt;Combines roles from &lt;code&gt;organizationRoleNames&lt;/code&gt; and &lt;code&gt;organizationRoleIds&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Automatically deduplicates entries&lt;/li&gt;
&lt;li&gt;Validates all names/IDs exist before applying changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Maintains backward compatibility with existing integrations using role IDs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/logto-io/logto/commit/edeb7cc8daabfbedb968513485d531f0a7a6c60d"&gt;edeb7cc8d&lt;/a&gt;: add &lt;code&gt;AuthnStatement&lt;/code&gt; to SAML app assertion response&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/logto-io/logto/commit/b2a77d79c1c9c56c1320c4954dd5099420605bb1"&gt;b2a77d79c&lt;/a&gt;: add &lt;code&gt;strictPhoneRegionNumberCheck&lt;/code&gt; to config with default value &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When this configuration is enabled, the connector will assume by default that all phone numbers include a valid region code and rely on this to determine whether the phone number belongs to mainland China. If your users' phone numbers do not include a region code due to historical reasons, their sign-in processes may be affected. Please enable this setting with caution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/logto-io/logto/commit/20b61e05e7c5b0e3f4ec7ed67bfff85a9845185d"&gt;20b61e05e&lt;/a&gt;: adjust TOTP secret length to 20 bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update the TOTP secret generation to use 20 bytes (160 bits), following the recommendation in RFC 6238 (TOTP) and RFC 4226 (HOTP).&lt;/p&gt;
&lt;p&gt;This aligns with the standard secret length used by most 2FA applications and provides better security while maintaining compatibility with existing TOTP validators.&lt;/p&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RFC 6238 (TOTP) Section 5.1: https://www.rfc-editor.org/rfc/rfc6238#section-5.1&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RFC 4226 (HOTP) Section 4, Requirement 6: https://www.rfc-editor.org/rfc/rfc4226#section-4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/logto-io/logto/commit/f15602f198f0dce049fec887ae6315a752263466"&gt;f15602f19&lt;/a&gt;: incorrect pagination behavior in organization role scopes APIs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix &lt;code&gt;/api/organization-roles/{id}/scopes&lt;/code&gt; and &lt;code&gt;/api/organization-roles/{id}/resource-scopes&lt;/code&gt; endpoints to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Return all scopes when no pagination parameters are provided&lt;/li&gt;
&lt;li&gt;Support optional pagination when query parameters are present&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fix Console to properly display all organization role scopes on the organization template page&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.25.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.26.0</id>
    <title>New release for Logto: v1.26.0</title>
    <updated>2025-03-31T04:09:45-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-03-31" src="https://github.com/user-attachments/assets/dada7218-0e67-4edd-86fe-3dabcf00c41d" /&gt;&lt;/p&gt;
&lt;h2&gt;Support multiple sign-up identifiers&lt;/h2&gt;
&lt;p&gt;Logto now supports configuring multiple required identifiers for user registration. This enhancement extends the previous single-identifier limitation, enabling a more comprehensive sign-up process.&lt;/p&gt;
&lt;h3&gt;Sign-in experience schema&lt;/h3&gt;
&lt;p&gt;Introduces a new optional field, &lt;code&gt;secondaryIdentifiers&lt;/code&gt;, to the sign-in experience sign-up settings. This enhancement allows developers to specify multiple required user identifiers during the user sign-up process. Available options include &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;emailOrPhone&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The difference between &lt;code&gt;signUp.identifiers&lt;/code&gt;and new &lt;code&gt;signUp.secondaryIdentifiers&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;h4&gt;Primary identifiers (&lt;code&gt;signUp.identifiers&lt;/code&gt;):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Maintains backward compatibility with existing sign-in experience settings&lt;/li&gt;
&lt;li&gt;Represents the initial registration form&lt;/li&gt;
&lt;li&gt;Uses OR logic: Only one type of identifier will be collected&lt;/li&gt;
&lt;li&gt;Special case: &lt;code&gt;[email, phone]&lt;/code&gt; allows either email OR phone registration, treated as a single requirement.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Secondary identifiers (&lt;code&gt;signUp.secondaryIdentifiers&lt;/code&gt;):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Optional&lt;/li&gt;
&lt;li&gt;New field introduced for multi-identifier support&lt;/li&gt;
&lt;li&gt;Collects additional required identifiers after primary registration&lt;/li&gt;
&lt;li&gt;Uses AND logic: all configured identifiers are mandatory&lt;/li&gt;
&lt;li&gt;Supports &lt;code&gt;emailOrPhone&lt;/code&gt; type: requires either email OR phone, treated as a single requirement&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;h4&gt;Example 1: Username with Required Email and Phone&lt;/h4&gt;
&lt;p&gt;Primary: &lt;code&gt;username&lt;/code&gt;&lt;br /&gt;
Secondary: 'email&lt;code&gt;and&lt;/code&gt;phone`&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "identifiers": ["username"],
  "secondaryIdentifiers": [
    {
      "type": "email",
      "verify": true
    },
    {
      "type": "phone",
      "verify": true
    }
  ],
  "verify": true,
  "password": true
}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Example 2: Username with Either Email or Phone&lt;/h4&gt;
&lt;p&gt;Primary: &lt;code&gt;username&lt;/code&gt;&lt;br /&gt;
Secondary: &lt;code&gt;emailOrPhone&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "identifiers": ["username"],
  "secondaryIdentifiers": [
    {
      "type": "emailOrPhone",
      "verify": true
    }
  ],
  "verify": true,
  "password": true
}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Example 3: Email/Phone with Required Username&lt;/h4&gt;
&lt;p&gt;Primary: &lt;code&gt;email&lt;/code&gt; OR &lt;code&gt;phone&lt;/code&gt;
Secondary: &lt;code&gt;username&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "identifiers": ["email", "phone"],
  "secondaryIdentifiers": [
    {
      "type": "username",
      "verify": true
    }
  ],
  "verify": true,
  "password": false
}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Console updates&lt;/h3&gt;
&lt;p&gt;Enhanced Sign-up Configuration UI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduced a multi-selector interface replacing the previous single-identifier selector&lt;/li&gt;
&lt;li&gt;Added drag-and-drop functionality for prioritizing identifiers&lt;/li&gt;
&lt;li&gt;The first identifier in the list serves as the primary identifier (&lt;code&gt;signUp.identifiers&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Subsequent identifiers are stored as secondary identifiers (&lt;code&gt;signUp.secondaryIdentifiers&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;image src="https://github.com/user-attachments/assets/8fb90f21-9c7c-412d-9e8c-e4ee191ca8a8" width=500 /&gt;&lt;/p&gt;
&lt;h2&gt;Enhanced sign-in experience configuration&lt;/h2&gt;
&lt;p&gt;We've relaxed several configuration constraints to give you more flexibility in customizing your authentication flows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The password requirement is now optional when using &lt;code&gt;username&lt;/code&gt; as a sign-up identifier.  Please note, when configuring &lt;code&gt;username&lt;/code&gt; as the sole sign-up identifier with password disabled, users will be unable to authenticate after registration. Ensure at least one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable password requirement at sign-up&lt;/li&gt;
&lt;li&gt;Configure additional sign-up identifiers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed the constraint requiring sign-up identifiers to be enabled as sign-in methods. We have fully decoupled the sign-up identifier settings from the sign-in methods. Developers can now require as many user identifiers as needed during the sign-up process without impacting the sign-in process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed the requirement for password verification across all sign-in methods when password is enabled for sign-up.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Experience package migration&lt;/h2&gt;
&lt;p&gt;In this release, we have transitioned the user sign-in experience from the legacy &lt;code&gt;@logto/experience-legacy&lt;/code&gt; package to the latest &lt;code&gt;@logto/experience package&lt;/code&gt;. This change fully adopts our new Experience API, enhancing the underlying architecture while maintaining the same user experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sign-in experience front-end  now uses the &lt;code&gt;@logto/experience&lt;/code&gt; package by default.&lt;/li&gt;
&lt;li&gt;Fully adopts our new Experience API for improved performance and maintainability&lt;/li&gt;
&lt;li&gt;Maintains complete feature parity with no visible changes to end-users&lt;/li&gt;
&lt;li&gt;Legacy Interaction API and &lt;code&gt;@logto/experience-legacy&lt;/code&gt; will be deprecated in future releases.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CLI updates&lt;/h2&gt;
&lt;h3&gt;@logto/translate&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improve the OpenAI prompt to better support i18n plural form suffixes&lt;/li&gt;
&lt;li&gt;make method &lt;code&gt;isLanguageTag&lt;/code&gt; case-insensitive&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Language tag case inconsistency was causing translation mismatches across packages:
     - &lt;code&gt;@logto/phrases&lt;/code&gt; and &lt;code&gt;@logto/phrases-experience&lt;/code&gt;: using lowercase tags (e.g., &lt;code&gt;pt-br&lt;/code&gt;, &lt;code&gt;zh-cn&lt;/code&gt;)
     - &lt;code&gt;@logto/language-kit&lt;/code&gt;: using mixed-case tags (e.g., &lt;code&gt;pt-BR&lt;/code&gt;, &lt;code&gt;zh-CN&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Updated &lt;code&gt;isLanguageTag&lt;/code&gt; function in language kit to be case-insensitive, ensuring:
     - Consistent language tag matching regardless of case
     - Proper detection of all language tags by translate CLI tool
     - Fixed missing translations due to case mismatches&lt;/p&gt;
&lt;h2&gt;Logto integrations updates&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;WordPress integration guide&lt;/strong&gt;: Added out-of-box WordPress plugin integration documentation to Logto console&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure AD social connector enhancement&lt;/strong&gt;: Added OAuth &lt;code&gt;scopes&lt;/code&gt; field to &lt;code&gt;@logto/connector-azuread&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enables customization of requested user permissions&lt;/li&gt;
&lt;li&gt;Provides greater flexibility in access control&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OIDC SSO connector authentication bug fixes&lt;/strong&gt;: Removed &lt;code&gt;client_id&lt;/code&gt; from token request body&lt;/li&gt;
&lt;li&gt;Resolves compatibility issues with OIDC providers like Okta&lt;/li&gt;
&lt;li&gt;Eliminates redundant client authentication method&lt;ul&gt;
&lt;li&gt;Before: &lt;code&gt;client_id&lt;/code&gt; included in both request body and authentication header&lt;/li&gt;
&lt;li&gt;After: Uses authentication header only&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;This OIDC SSO connector update improves compatibility with providers that enforce strict client authentication methods. By removing the redundant &lt;code&gt;client_id&lt;/code&gt; from the request body while maintaining the authentication header, we ensure consistent behavior across different OIDC providers.&lt;/li&gt;
&lt;/ol&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.26.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.27.0</id>
    <title>New release for Logto: v1.27.0</title>
    <updated>2025-04-27T06:03:16-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-04-27" src="https://github.com/user-attachments/assets/f7d816bd-ba2c-4952-b3c5-954eb3e96025" /&gt;&lt;/p&gt;
&lt;h2&gt;Security center in Logto Console&lt;/h2&gt;
&lt;p&gt;We have introduced a new"Security" page in the Logto console, which includes the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Password policy: This feature has been migrated from the "Sign-in Experience" page to the new "Security" page.&lt;/li&gt;
&lt;li&gt;CAPTCHA: Enable CAPTCHA for sign-up, sign-in, and password recovery to mitigate automated threats.&lt;/li&gt;
&lt;li&gt;Identifier lockout: Temporarily lock an identifier after multiple failed authentication attempts (e.g., consecutive incorrect passwords or verification codes) to prevent brute force access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/security"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Captcha bot protection&lt;/h2&gt;
&lt;p&gt;As mentioned in the above "Security" update, you can now enable CAPTCHA bot protection for your sign-in experience with providers such as Google reCAPTCHA enterprise and Cloudflare Turnstile.&lt;/p&gt;
&lt;p&gt;To enable CAPTCHA bot protection, you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to Console &amp;gt; Security &amp;gt; CAPTCHA &amp;gt; Bot protection.&lt;/li&gt;
&lt;li&gt;Select the CAPTCHA provider you want to use.&lt;/li&gt;
&lt;li&gt;Configure the CAPTCHA provider by following our step-by-step guide.&lt;/li&gt;
&lt;li&gt;Save the settings.&lt;/li&gt;
&lt;li&gt;Enable CAPTCHA in the Security page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then take a preview of your sign-in experience to see the CAPTCHA in action.&lt;/p&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/security/captcha"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Identifier lockout (sentinel)&lt;/h2&gt;
&lt;p&gt;The identifier lockout has always been there protecting your Logto instance. However, previously it is hard-coded and not configurable. Now you can fully customize and override the default rules in the Security center.&lt;/p&gt;
&lt;p&gt;This update includes the follow 3 parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Maximum failed attempts:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This limits the number of consecutive failed authentication attempts per identifier within an hour. If the limit is exceeded, the identifier will be temporarily locked out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default value: 100&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lockout duration (minutes):&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This specifies the period during which all authentication attempts for the given identifier are blocked after exceeding the maximum failed attempts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default value: 60 minutes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manual unblock:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A new API endpoint has been introduced to manually unblock a specified list of identifiers. This feature is useful for administrators to unlock users who have been temporarily locked out due to exceeding the maximum failed attempts.&lt;/p&gt;
&lt;p&gt;Endpoint: &lt;code&gt;POST /api/sentinel-activities/delete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This endpoint allows for the bulk deletion of all sentinel activities within an hour in the database based on the provided identifiers, effectively unblocking them.&lt;/p&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/security/identifier-lockout"&gt;documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;Magic link (one-time token) support&lt;/h2&gt;
&lt;p&gt;You can now use the "one-time token" to compose magic links, and send them to the end user's email.&lt;/p&gt;
&lt;p&gt;With a magic link, one can register a new account or sign in directly to the application, without the need to enter a password, or input verification codes.&lt;/p&gt;
&lt;p&gt;You can also use magic link to invite users to your organizations.&lt;/p&gt;
&lt;h3&gt;Example API request to create a one-time token&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;bash
POST /api/one-time-tokens&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Request payload:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jsonc
{
  "email": "user@example.com",
  // Optional. Defaults to 600 (10 mins).
  "expiresIn": 3600,
  // Optional. User will be provisioned to the specified organizations upon successful verification.
  "context": {
    "jitOrganizationIds": ["your-org-id"],
  },
}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Compose your magic link&lt;/h3&gt;
&lt;p&gt;After you get the one-time token, you can compose a magic link and send it to the end user's email address. The magic link should at least contain the token and the user email as parameters, and should navigate to a landing page in your own application. E.g. &lt;code&gt;https://yourapp.com/landing-page&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here's a simple example of what the magic link may look like:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://yourapp.com/landing-page?token=YHwbXSXxQfL02IoxFqr1hGvkB13uTqcd&amp;amp;email=user@example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/end-user-flows/one-time-token"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Bump node to v22&lt;/h2&gt;
&lt;p&gt;We've updated Node.js to v22 for better performance and security.&lt;/p&gt;
&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;f41938257: respond 404 for non-existing paths in &lt;code&gt;/assets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;7dbcedaa1: move password encyption to separate worker thread&lt;/li&gt;
&lt;li&gt;cfedfb306: clean up legacy Experience package&lt;/li&gt;
&lt;li&gt;752d406bd: support string-typed boolean claims in OIDC connector&lt;/li&gt;
&lt;li&gt;59c398442: add Ukrainian translation to Experience (credit @HighError)&lt;/li&gt;
&lt;li&gt;ba7621005: convert Windows absolute paths to file URLs for dynamic imports (credit @jtmaveryk)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Security updates and vulnerability fixes&lt;/h2&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@HighError made their first contribution in https://github.com/logto-io/logto/pull/7205&lt;/li&gt;
&lt;li&gt;@jtmaveryk made their first contribution in https://github.com/logto-io/logto/pull/7126&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/logto-io/logto/compare/v1.26.0...v1.27&lt;/p&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.27.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.28.0</id>
    <title>New release for Logto: v1.28.0</title>
    <updated>2025-05-26T09:25:04-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-05-26" src="https://github.com/user-attachments/assets/e24a1975-90a4-44b7-af57-54471c9c78bc" /&gt;&lt;/p&gt;
&lt;h2&gt;Email blocklist policy&lt;/h2&gt;
&lt;p&gt;We've introduced a comprehensive email blocklist policy system with a dedicated settings page in the Logto console's Security section. This new feature provides granular control over which email addresses can be used for sign-up and account linking.&lt;/p&gt;
&lt;p&gt;With this new policy, you can:
- Customize email restrictions through a flexible blocklist system
- Prevent sign-ups or account linking with specific email addresses or domains
- Control email subaddressing (e.g., 'user+tag@example.com')&lt;/p&gt;
&lt;h2&gt;Phone number validation and normalization&lt;/h2&gt;
&lt;p&gt;We've improved phone number handling to ensure consistent format validation and storage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added proper handling for phone numbers with leading zeros in national format&lt;/li&gt;
&lt;li&gt;Normalizes numbers like +61 (0)2 1234 5678 to +61 2 1234 5678&lt;/li&gt;
&lt;li&gt;Users can sign in with either format (with or without leading zero)&lt;/li&gt;
&lt;li&gt;Existing accounts can still use their original phone number format&lt;/li&gt;
&lt;li&gt;Implemented stricter phone number format validation in database&lt;/li&gt;
&lt;li&gt;Fixed phone number format inconsistencies (GitHub issue #7371, thanks for @mrfrase3)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;QQ social connector&lt;/h2&gt;
&lt;p&gt;We've expanded our social sign-in options by introducing a new QQ social connector specifically designed for web applications, enabling seamless QQ account integration for your users. (Contributed by @yenharvey in #7380)&lt;/p&gt;
&lt;h2&gt;OIDC connector&lt;/h2&gt;
&lt;p&gt;We've updated our OIDC connector configuration to make the &lt;code&gt;userinfo_endpoint&lt;/code&gt; field optional. The system now intelligently handles user data extraction based on available endpoints, providing a more flexible authentication solution while maintaining OIDC specification compliance.&lt;/p&gt;
&lt;p&gt;This update enables:
- Seamless integration with Azure AD B2C SSO applications
- Automatic fallback to &lt;code&gt;id_token&lt;/code&gt; claims when &lt;code&gt;userinfo_endpoint&lt;/code&gt; is unavailable
- Full compatibility with standard OIDC providers
- Removal of integration barriers for non-standard OIDC implementations&lt;/p&gt;
&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced translation key synchronization to handle empty files during sync process, eliminating manual intervention needs&lt;/li&gt;
&lt;li&gt;Upgraded to &lt;code&gt;gpt-4.1&lt;/code&gt; as the default translation model for better cost-efficiency&lt;/li&gt;
&lt;li&gt;Improved CAPTCHA configuration visibility in console with persistent toggle display&lt;/li&gt;
&lt;li&gt;Updated CAPTCHA settings navigation to /security/captcha&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added missing CAPTCHA box to identifier sign in form&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/logto-io/logto/compare/v1.27.0...v1.28&lt;/p&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.28.0" rel="alternate"/>
  </entry>
</feed>
