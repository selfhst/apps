<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>RunsOn Releases</title>
  <updated>2025-06-27T05:33:50.207033-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/runs-on/runs-on/releases/tag/v2.8.1</id>
    <title>New release for RunsOn: v2.8.1</title>
    <updated>2025-05-04T07:38:56-04:00</updated>
    <author>
      <name>runs-on/runs-on</name>
    </author>
    <content>&lt;p&gt;A large release: can now use external networking stack ; enable encryption on all S3 buckets ; lots of quality of life improvements and bug fixes ; halve Windows boot times and enable Cloudwatch agent monitoring. Be sure to read the upgrade notes.&lt;/p&gt;
&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;h3&gt;Networking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Can now reuse existing networking stack. If &lt;code&gt;NetworkingStack&lt;/code&gt; stack parameter is set to &lt;code&gt;external&lt;/code&gt; instead of &lt;code&gt;embedded&lt;/code&gt;. Fixes #198, fixes #265, fixes #230 (community-provided networking stack can provide this feature).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="networking-stack@2x" src="https://github.com/user-attachments/assets/50d0fa13-447a-4694-a7fe-b46c3b22eebe" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some not-so-useful stack outputs have been removed. Some outputs may be &lt;code&gt;-&lt;/code&gt; if using an external VPC.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Caching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix invalid cache key restoration for Magic Cache. Thanks @erikburt from ChainlinkLabs for the troubleshooting.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Enable server-side encryption using AWS-managed KMS key on all S3 buckets. Fixes #276.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No longer expose JIT token in cloud-init-output logs. The token is no longer valid after a job is run, but still.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;QoL improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;AppDebug&lt;/code&gt; (true or false) stack parameter, which allows to disable the auto-shutdown of runners when the bootstrap fails. Useful to investigate what is going on when the runner initializes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;AppCustomPolicy&lt;/code&gt; stack parameter: Optional managed IAM Policy ARN to assign to the App runner service role. Can be used to e.g. allow access to KMS decryption keys for AMIs. Thanks @dsme94!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;AppGithubApiStrategy&lt;/code&gt; (normal or conservative) stack parameter to opt into minimizing GitHub API usage. If set to &lt;code&gt;conservative&lt;/code&gt;, runners won't be automatically unregistered in GitHub internal database (GitHub will still clean them up after 24h). This helps for users with very large number (20k+) of jobs launched every day. Fixes #285.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now bootstraps runners using &lt;a href="https://github.com/runs-on/bootstrap"&gt;runs-on/bootstrap&lt;/a&gt; binary, preinstalled on official RunsOn images (faster and more extensible).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On spot interruption, give more time to the job to possibly complete before shutdown is triggered. Shutdown is now triggered 20s before the expected time sent by AWS, instead of 15 seconds after the notification is received. Fixes #277.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Shaved about 50s from Windows boot times: SSH is no longer automatically installed on Windows (SSM agent is available now), and no longer using &lt;code&gt;Invoke-WebRequest&lt;/code&gt; &lt;a href="https://stackoverflow.com/questions/28682642/powershell-why-is-using-invoke-webrequest-much-slower-than-a-browser-download"&gt;helped a lot&lt;/a&gt; (TIL).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CloudWatch agent is automatically installed on Windows AMIs, and EC2Launch logs are shipped to CloudWatch (same naming as for Linux runners: e.g. &lt;code&gt;LOG_GROUP_NAME/INSTANCE_ID/cloud-init-output.log&lt;/code&gt;). Also added support for &lt;code&gt;roc connect&lt;/code&gt; on Windows AMIs in the &lt;a href="https://github.com/runs-on/cli"&gt;RunsOn CLI&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bug fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fix for invalid CreateTags requests - Fixes #288.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix for invalid EC2 rate-limiter being used when uploading user-data file to S3. Fixes #286 .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adjust ownership rule for S3 bucket logging, from &lt;code&gt;BucketOwnerPreferred&lt;/code&gt; to &lt;code&gt;BucketOwnerEnforced&lt;/code&gt;. Fixes #291.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade notes&lt;/h2&gt;
&lt;h3&gt;Service interruption&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: this upgrade is better performed during slow hours. During the few minutes that the upgrade lasts, and a few minutes after (while the old AppRunner instance(s) are taken out of traffic), jobs that are still hitting the old AppRunner instance(s) of the RunsOn service will fail to launch because the bootstrap script can no longer be downloaded. This is a side-effect of enabling S3 encryption, which disables non-authenticated downloads.&lt;/p&gt;
&lt;p&gt;Be prepared to have to re-run some of the jobs. Or you can also create and configure a new stack from scratch, and remove the old one when finished (there will be some duplicate instances launched, but they will be cleaned up after 10 minutes).&lt;/p&gt;
&lt;h3&gt;Switching to an external networking stack&lt;/h3&gt;
&lt;p&gt;When switching from the &lt;code&gt;embedded&lt;/code&gt; to an &lt;code&gt;external&lt;/code&gt; Networking Stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you were using the VPC peering CloudFormation template, you will need to delete that stack first.&lt;/li&gt;
&lt;li&gt;your external networking stack will have to take care of VPC endpoints, NAT gateways etc, as you see fit. An S3 gateway endpoints is strongly recommended (S3 traffic is kept within the VPC and it's free).&lt;/li&gt;
&lt;li&gt;RunsOn will perform networking checks when booting: if you have enabled the &lt;code&gt;Private&lt;/code&gt; mode, it will ensure you have at least one private subnet with some kind of external connection (NAT gateway, Transit gateway, VPC peering, EC2 instance acting as gateway, etc.). If you don't have &lt;code&gt;Private&lt;/code&gt; mode set, it will verify that there is at least one public subnet with an internet gateway attached. If the verification fails, you will get alerted with the SNS topic, and the RunsOn service will fail to boot.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runs-on.com/guides/upgrade/"&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFormation Versioned template URL: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.1.yaml&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/runs-on/runs-on/releases/tag/v2.8.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/runs-on/runs-on/releases/tag/v2.8.2</id>
    <title>New release for RunsOn: v2.8.2</title>
    <updated>2025-05-15T03:36:53-04:00</updated>
    <author>
      <name>runs-on/runs-on</name>
    </author>
    <content>&lt;p&gt;Support for EFS, TMPFS, and ECR ephemeral registry for fast docker builds. Also some bug fixes.&lt;/p&gt;
&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;h3&gt;EFS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Embedded networking stack can now create an Elastic File System (EFS), and runners will auto-mount it at &lt;code&gt;/mnt/efs&lt;/code&gt; if the &lt;code&gt;extras&lt;/code&gt; label include &lt;code&gt;efs&lt;/code&gt;. Useful to share artefacts across job runs, with classic filesystem primitives.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
jobs:
  with-efs:
    runs-on: runs-on=${{ github.run_id }},runner=2cpu-linux-x64,extras=efs
    steps:
      - run: df -ah /mnt/efs
      # 127.0.0.1:/      8.0E   35G  8.0E   1% /mnt/efs&lt;/code&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;üìù Example use case for maintaining mirrors&lt;/summary&gt;
For instance this can be used to maintain local mirrors of very large github repositories and avoid long checkout times for every job:

```yaml
env:
  MIRRORS: "https://github.com/PostHog/posthog.git"
  # can be ${{ github.ref }} if same repo as the workflow
  REF: main

jobs:
  with-efs:
    runs-on: runs-on=${{ github.run_id }},runner=2cpu-linux-x64,extras=efs
    steps:
      - name: Setup / Refresh mirrors
        run: |
          for MIRROR in ${{ env.MIRRORS }}; do
            full_repo_name=$(echo $MIRROR | cut -d/ -f4-)
            MIRROR_DIR=/mnt/efs/mirrors/$full_repo_name
            mkdir -p "$(dirname $MIRROR_DIR)"
            test -d "${MIRROR_DIR}" || git clone --mirror ${MIRROR/https:\/\//https:\/\/x-access-token:${{ secrets.GITHUB_TOKEN }}@} "${MIRROR_DIR}"
            ( cd "$MIRROR_DIR" &amp;&amp; \
              git remote set-url origin ${MIRROR/https:\/\//https:\/\/x-access-token:${{ secrets.GITHUB_TOKEN }}@} &amp;&amp; \
              git fetch origin ${{ env.REF }} )
          done
      - name: Checkout from mirror
        run: |
          git clone file:///mnt/efs/mirrors/PostHog/posthog.git --branch ${{ env.REF }} --single-branch --depth 1 upstream
```
&lt;/details&gt;

&lt;h3&gt;Ephemeral registry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Support for an Ephemeral ECR registry: can now automatically create an ECR repository that can act as an ephemeral registry for pulling/pushing images and cache layers from your runners. Especially useful with the &lt;code&gt;type=registry&lt;/code&gt; buildkit cache instruction. If the &lt;code&gt;extras&lt;/code&gt; label includes &lt;code&gt;ecr-cache&lt;/code&gt;, the runners will automatically setup docker credentials for that registry at the start of the job.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
jobs:
  ecr-cache:
    runs-on: runs-on=${{ github.run_id }},runner=2cpu-linux-x64,extras=ecr-cache
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v4
        env:
          TAG: ${{ env.RUNS_ON_ECR_CACHE }}:my-app-latest
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.TAG }}
          cache-to: type=registry,ref=${{ env.TAG }} }},mode=max,compression=zstd,compression-level=22&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Tmpfs&lt;/h3&gt;
&lt;p&gt;Support for setting up a &lt;code&gt;tmpfs&lt;/code&gt; volume (size: 100% of available RAM, so only to be used on high-memory instances), and binding the &lt;code&gt;/tmp&lt;/code&gt;, &lt;code&gt;/home/runner&lt;/code&gt;, and &lt;code&gt;/var/lib/docker&lt;/code&gt; folders on it. &lt;code&gt;/tmp&lt;/code&gt; and &lt;code&gt;/home/runner&lt;/code&gt; are mounted as overlays, preserving their existing content.&lt;/p&gt;
&lt;p&gt;Can speed up some IO-intensive workflows. Note that if &lt;code&gt;tmpfs&lt;/code&gt; is active, instances with ephemeral disks won't have those mounted since it would conflict with the &lt;code&gt;tmpfs&lt;/code&gt; volume.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
jobs:
  with-tmpfs:
    runs-on: runs-on=${{ github.run_id }},family=r7,ram=16,extras=tmpfs
    steps:
      - run: df -ah /mnt/tmpfs
      # tmpfs            16G  724K   16G   1% /mnt/tmpfs
      - run: df -ah /home/runner
      # overlay          16G  724K   16G   1% /home/runner
      - run: df -ah /tmp
      # overlay          16G  724K   16G   1% /tmp
      - run: df -ah /var/lib/docker
      # tmpfs            16G  724K   16G   1% /var/lib/docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can obviously combine options, i.e. &lt;code&gt;extras=efs+tmpfs+ecr-cache+s3-cache&lt;/code&gt; is a valid label üòÑ&lt;/p&gt;
&lt;h2&gt;Instance-storage mounting changes&lt;/h2&gt;
&lt;p&gt;Until now, when an instance has locally attached NVMe SSDs available, they would be automatically formatted and mounted so that &lt;code&gt;/var/lib/docker&lt;/code&gt; and &lt;code&gt;/home/runner/_work&lt;/code&gt; directories would end up on the local disks. Since a lot of stuff (caches etc.) seem to end up within the &lt;code&gt;/home/runner&lt;/code&gt; folder itself, the agent now uses the same strategy as for the new &lt;code&gt;tmpfs&lt;/code&gt; mounts above (i.e. the whole &lt;code&gt;/home/runner&lt;/code&gt; folder is mounted as an overlay on the local disk volume, as well as the &lt;code&gt;/tmp&lt;/code&gt; folder. &lt;code&gt;/var/lib/docker&lt;/code&gt; remains mounted as a normal filesystem on the local disk volume). Fixes #284.&lt;/p&gt;
&lt;h3&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move all RunsOn-specific config files into &lt;code&gt;/runs-on&lt;/code&gt; folder on Linux. More coherent with Windows (&lt;code&gt;C:\runs-on&lt;/code&gt;), and avoids polluting &lt;code&gt;/opt&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;app_version&lt;/code&gt; in logs (was previously empty string due to incorrect env variable being used in v2.8.1).&lt;/li&gt;
&lt;li&gt;Fix "Require any Amazon EC2 launch template not to auto-assign public IP addresses to network interfaces" from AWS Control Tower. When the &lt;code&gt;Private&lt;/code&gt; mode is set to &lt;code&gt;only&lt;/code&gt;, no longer enable public ip auto-assignment in the launch templates. Thanks @temap!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runs-on.com/guides/upgrade/"&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFormation Versioned template URL: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.2.yaml&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/runs-on/runs-on/releases/tag/v2.8.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/runs-on/runs-on/releases/tag/v2.8.3</id>
    <title>New release for RunsOn: v2.8.3</title>
    <updated>2025-05-28T06:39:47-04:00</updated>
    <author>
      <name>runs-on/runs-on</name>
    </author>
    <content>&lt;p&gt;Huge improvements to tagging, magic cache is now even faster, and bug fix for jobs tied to environments with no approval required.&lt;/p&gt;
&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;h3&gt;QoL improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check if the spot role exists before starting RunsOn service (preflight check 2 from the installation guide). If not, alert the user over the SNS topic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cleanup all dangling instances, irrespective of RunsOn version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rewrote magic cache to more efficiently stream uploads when &lt;code&gt;actions/cache&lt;/code&gt; is the client. For bigger (&amp;gt;1GiB) payloads, there should be a very noticeable improvement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;code&gt;SSHAllowed&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; at the stack level, discard any &lt;code&gt;ssh=true&lt;/code&gt; value coming from label or repo config. Fixes #310.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Improvements to tagging&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pass all custom tags to volumes, in addition to instances, when creating the runner. Fixes #264.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow to set additional custom tags using a &lt;a href="https://docs.github.com/en/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization"&gt;custom property&lt;/a&gt; in the GitHub settings of a repository. If a custom property with name &lt;code&gt;runs-on-custom-tags&lt;/code&gt; exists, RunsOn will parse it in the same way as the stack-level custom tags, and apply them to the instance and volumes. Fixes #297. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="custom property@2x" src="https://github.com/user-attachments/assets/70c15bee-cd29-4af4-b6b3-b7509489db01" /&gt;&lt;/p&gt;
&lt;p&gt;For instance: if the value for property &lt;code&gt;runs-on-custom-tags&lt;/code&gt; is set to &lt;code&gt;key1=val1,key2=val2&lt;/code&gt; then instances and volumes will get 2 new tags (key1, key2) with their corresponding values.&lt;/p&gt;
&lt;p&gt;Same restrictions than stack-level tags apply. &lt;a href="https://runs-on.com/configuration/stack-config/#runnercustomtags"&gt;Stack-level tags&lt;/a&gt; take precedence over tags set in the custom property, and tags set in custom properties takes precedence over custom runner tags &lt;a href="https://runs-on.com/configuration/repo-config/#runnerstags"&gt;defined in the &lt;code&gt;.github/runs-on.yml&lt;/code&gt;&lt;/a&gt; configuration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pass custom tags and default branch to runner config. And write config in &lt;code&gt;/runs-on/config.json&lt;/code&gt; (linux), or &lt;code&gt;C:\runs-on\config.json&lt;/code&gt; (Windows). Config can then be read by actions / scripts etc. to access all runner details easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bug fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix the race-condition that could lead to 2 instances being started when handling jobs tied to a deployment that does not require approval.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add goroutine to cleanup dangling volumes and snapshots (prepare for block-level snapshots).&lt;/li&gt;
&lt;li&gt;Register &lt;code&gt;waiting&lt;/code&gt;, &lt;code&gt;in_progress&lt;/code&gt;, and &lt;code&gt;completed&lt;/code&gt; webhook payloads in S3 (in addition to &lt;code&gt;queued&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runs-on.com/guides/upgrade/"&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFormation Versioned template URL: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.3.yaml&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/runs-on/runs-on/releases/tag/v2.8.3" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/runs-on/runs-on/releases/tag/v2.8.4</id>
    <title>New release for RunsOn: v2.8.4</title>
    <updated>2025-06-20T11:39:28-04:00</updated>
    <author>
      <name>runs-on/runs-on</name>
    </author>
    <content>&lt;p&gt;Integrated CPU/Memory/Disk/Network monitoring, integrated job-level cost reporting, official snapshot action release, and many QoL improvements.&lt;/p&gt;
&lt;h2&gt;Spotlight: Monitoring improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Allow to send metrics to CWAgent namespace. This allows &lt;a href="https://github.com/runs-on/action"&gt;runs-on/action@v2&lt;/a&gt; to send and graph metrics right within your job output. For instance:
&lt;code&gt;üìä Disk Writes:
         5973 ‚î§                ‚ï≠‚ïÆ
         5500 ‚î§               ‚ï≠‚ïØ‚ï∞‚ïÆ
         5028 ‚îº‚ïÆ             ‚ï≠‚ïØ  ‚ï∞‚ïÆ                   ‚ï≠‚îÄ‚îÄ‚îÄ‚ïÆ              ‚ï≠
         4555 ‚î§‚ï∞‚ïÆ           ‚ï≠‚ïØ    ‚ï∞‚ïÆ               ‚ï≠‚îÄ‚îÄ‚ïØ   ‚ï∞‚îÄ‚ïÆ          ‚ï≠‚îÄ‚ïØ
         4083 ‚î§ ‚ï∞‚ïÆ         ‚ï≠‚ïØ      ‚ï∞‚îÄ‚ïÆ          ‚ï≠‚îÄ‚îÄ‚ïØ        ‚ï∞‚ïÆ       ‚ï≠‚îÄ‚ïØ
         3610 ‚î§  ‚ï∞‚îÄ‚ïÆ      ‚ï≠‚ïØ         ‚ï∞‚ïÆ      ‚ï≠‚îÄ‚îÄ‚ïØ            ‚ï∞‚îÄ‚ïÆ   ‚ï≠‚îÄ‚ïØ
         3138 ‚î§    ‚ï∞‚ïÆ    ‚ï≠‚ïØ           ‚ï∞‚ïÆ ‚ï≠‚îÄ‚îÄ‚îÄ‚ïØ                 ‚ï∞‚îÄ‚îÄ‚îÄ‚ïØ
         2665 ‚î§     ‚ï∞‚ïÆ  ‚ï≠‚ïØ             ‚ï∞‚îÄ‚ïØ
         2193 ‚î§      ‚ï∞‚îÄ‚îÄ‚ïØ
                                 Disk Writes (Ops/s)
      Stats: min:2040.0 avg:4180.9 max:6026.0 Ops/s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create resource group for EC2 instances on CloudWatch. This means you can go to the CloudWatch EC2 Automatic dashboard, select your resource group (named after your RunsOn stack) and get a high-level overview of metrics for all your runner instances.
  &lt;img alt="2025-06-19-000029-CloudWatch  us-east-1" src="https://github.com/user-attachments/assets/3157034b-6c45-49c4-b891-6348416b1784" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow instance role to enable detailed monitoring on demand (not used for now, but might be an option of runs-on/action.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Spotlight: Costs computation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/runs-on/action"&gt;runs-on/action@v2&lt;/a&gt; now automatically computes the costs associated for each job, and displays the results right within your job logs. You can also choose to display them as a job summary.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Spotlight: Block-level snapshots&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/runs-on/snapshot"&gt;runs-on/snapshot@v1&lt;/a&gt; action is available and can be used to save and restore entire folders between job executions, at a much faster speed (for long jobs) than other methods relying on compression and export to S3 or other.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Stack improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Allow to override the max runner time limit. Fixes #320.&lt;/li&gt;
&lt;li&gt;Add support for permission boundary for SchedulerInvokeRole. Fixes #315.&lt;/li&gt;
&lt;li&gt;Add AWS account-id and region to emails. Fixes #298.&lt;/li&gt;
&lt;li&gt;Remove explicit &lt;code&gt;PublicAccessBlockConfiguration&lt;/code&gt; declaration since some SCP policies can incorrectly flag the &lt;code&gt;s3:PutBucketPublicAccessBlock&lt;/code&gt; action. This is the default for new buckets anyway.&lt;/li&gt;
&lt;li&gt;Add ECR Full Access managed policy to obtain higher ECR Public Rate Limits.&lt;/li&gt;
&lt;li&gt;Make bootstrapping work on more distros.&lt;/li&gt;
&lt;li&gt;Allow RunsOn to auto-create spot role if absent.&lt;/li&gt;
&lt;li&gt;Add health checks for email notification subscription, and ec2 spot role.
  &lt;img alt="success@2x" src="https://github.com/user-attachments/assets/ede418d9-208d-41e6-9ff2-afe2ca6e841a" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove legacy (and unused) &lt;code&gt;.env&lt;/code&gt; loading.&lt;/li&gt;
&lt;li&gt;Update go to 1.24.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runs-on.com/guides/upgrade/"&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFormation Versioned template URL: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.4.yaml&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/runs-on/runs-on/releases/tag/v2.8.4" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/runs-on/runs-on/releases/tag/v2.8.5</id>
    <title>New release for RunsOn: v2.8.5</title>
    <updated>2025-06-27T03:39:31-04:00</updated>
    <author>
      <name>runs-on/runs-on</name>
    </author>
    <content>&lt;p&gt;Fix buildkit gha exporter, better user error reporting, AppRunner VPC connector integration.&lt;/p&gt;
&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Report non-retryable user errors directly in GitHub: whenever a job can't be started for user reasons (e.g. bad image, bad runner definition, etc.), RunsOn will now spawn a default runner that will fail at the "Set up runner" step, with an error message explaining why. This will help surface issues. Fixes #307.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="2025-06-26-000054-Dev  Errors ¬∑ runs-ontest@4363cc8" src="https://github.com/user-attachments/assets/e8c743da-17a9-489c-9713-075212861d02" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fix issue with &lt;code&gt;type=gha&lt;/code&gt; buildkit exporter for docker layers. Fixes #328.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatically enable the &lt;a href="https://docs.aws.amazon.com/apprunner/latest/dg/network-vpc.html"&gt;AppRunner VPC connector&lt;/a&gt; when &lt;code&gt;Private&lt;/code&gt; mode is active, so that all AppRunner egress traffic (for the RunsOn orchestrator) goes through the private subnet(s) NAT gateways or equivalent. This means the AppRunner service will use the same static IP(s) as the runners, so that you can whitelist the AppRunner service on your GHES or GitHub Enterprise installation if needed. All ingress traffic is still publicly allowed and handled by AWS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Telemetry: send values for &lt;code&gt;networking_stack&lt;/code&gt; (embedded or external), and &lt;code&gt;extras&lt;/code&gt;. Will help better understand how RunsOn is setup and which extra features are most used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade considerations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When using the external networking stack, you must now specify public and private subnet IDs separately with the parameters &lt;code&gt;ExternalVpcPublicSubnetIds&lt;/code&gt; and &lt;code&gt;ExternalVpcPrivateSubnetIds&lt;/code&gt; respectively.&lt;/li&gt;
&lt;li&gt;AWS reports that enabling the VPC connector can take a few minutes and may impact RunsOn interactions with external services, so better to perform the upgrade during a quiet time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runs-on.com/guides/upgrade/"&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CloudFormation Versioned template URL: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.5.yaml&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/runs-on/runs-on/releases/tag/v2.8.5" rel="alternate"/>
  </entry>
</feed>
