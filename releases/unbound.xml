<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Unbound Releases</title>
  <updated>2025-08-06T21:32:22.751392-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/NLnetLabs/unbound/releases/tag/release-1.21.0</id>
    <title>New release for Unbound: Unbound 1.21.0</title>
    <updated>2024-08-15T04:56:18-04:00</updated>
    <author>
      <name>NLnetLabs/unbound</name>
    </author>
    <content>&lt;p&gt;Unbound 1.21.0&lt;/p&gt;
&lt;p&gt;This release has a fix for the CAMP and CacheFlush issues. They have a
low severity for Unbound, since it does not affect Unbound so much.&lt;/p&gt;
&lt;p&gt;The Compositional Amplification (CAMP) type of attacks can lead to DoS
attacks against DNS servers. In Unbound legitimate client requests to
the resolvers under typical workload are not directly affected by CAMP
attacks. However we introduce a global quota for 128 outgoing packets
per query (and it's subqueries) that is never reset to prevent the
combination of CAMP with other amplification attacks in the future. We
would like to thank Huayi Duan, Marco Bearzi, Jodok Vieli, and Cagin
Tanir from NetSec group, ETH Zurich for discovering and notifying us
about the issue.&lt;/p&gt;
&lt;p&gt;The CacheFlush type of attacks (NSCacheFlush, CNAMECacheFlush) try to
evict cached data by utilizing rogue zones and a steady rogue stream to
a resolver. Based on the zone, the stream, the configured cache size
and the legitimate traffic, Unbound could experience a degradation of
service if a useful entry is evicted and Unbound needs to resolve again.
As a mitigation to the NSCacheFlush attack Unbound is setting a limit
of 20 RRs in an NS RRset. We would like to thank Yehuda Afek, Anat
Bremler-Barr, Shoham Danino and Yuval Shavitt (Tel-Aviv University and
Reichman University) for discovering and notifying us about the issue.&lt;/p&gt;
&lt;p&gt;Other fixes in this release are bug fixes. Also the unbound control
commands that flush the cache can clear both the memory and cachedb
module cache. The ipset module can use BSD pf tables. The new option
&lt;code&gt;dnstap-sample-rate: 100&lt;/code&gt; can be used to log 1/N messages, for use in
high volume server environments where the log server does not keep up.&lt;/p&gt;
&lt;p&gt;The new DNSSEC key for the root, 38696 from 2024 has been added. It is
added to the default root keys in unbound-anchor. The content can be
inspected with &lt;code&gt;unbound-anchor -l&lt;/code&gt;. Older versions of Unbound can keep
up with the root key with &lt;code&gt;auto-trust-anchor-file&lt;/code&gt; that has RFC5011
key rollover. Also unbound-anchor can fetch the keys from the website
with a certificate if needed.&lt;/p&gt;
&lt;p&gt;For cookie secrets, it is possible to perform rollover. The file
with cookie secret in use and the staging secret is configured
with &lt;code&gt;cookie-secret-file&lt;/code&gt;. With the remote control the rollover can be
performed, add_cookie_secret, activate_cookie_secret, drop_cookie_secret
and print_cookie_secrets can be used for that.&lt;/p&gt;
&lt;p&gt;Compared to the RC1, the release has a fix for module loading on Windows,
and a spelling correction.&lt;/p&gt;
&lt;p&gt;Features
- Fix #1071: [FR] Clear both in-memory and cachedb module cache with
  &lt;code&gt;unbound-control flush*&lt;/code&gt; commands.
- Fix #144: Port ipset to BSD pf tables.
- Add dnstap-sample-rate that logs only 1/N messages, for high volume
  server environments. Thanks Dan Luther.
- Add root key 38696 from 2024 for DNSSEC validation. It is added
  to the default root keys in unbound-anchor. The content can be
  inspected with &lt;code&gt;unbound-anchor -l&lt;/code&gt;.
- Merge #1090: Cookie secret file. Adds
  &lt;code&gt;cookie-secret-file: "unbound_cookiesecrets.txt"&lt;/code&gt; option to store
  cookie secrets for EDNS COOKIE secret rollover. The remote control
  add_cookie_secret, activate_cookie_secret and drop_cookie_secret
  commands can be used for rollover, the command print_cookie_secrets
  shows the values in use.&lt;/p&gt;
&lt;p&gt;Bug Fixes
- Fix CAMP issues with global quota. Thanks to Huayi Duan, Marco
  Bearzi, Jodok Vieli, and Cagin Tanir from NetSec group, ETH Zurich.
- Fix CacheFlush issues with limit on NS RRs. Thanks to Yehuda Afek,
  Anat Bremler-Barr, Shoham Danino and Yuval Shavitt (Tel-Aviv
  University and Reichman University).
- Merge #1062: Fix potential overflow bug while parsing port in
  function cfg_mark_ports.
- Fix for #1062: declaration before statement, avoid print of null,
  and redundant check for array size.
- Fix to squelch udp connect errors in the log at low verbosity about
  invalid argument for IPv6 link local addresses.
- Fix when the mesh jostle is exceeded that nameserver targets are
  marked as resolved, so that the lookup is not stuck on the
  requestlist.
- Add missing common functions to tdir tests.
- Merge #1070: Fix rtt assignement for low values of
  infra-cache-max-rtt.
- Merge #1069: Fix unbound-control stdin commands for multi-process
  Unbounds.
- Fix unbound-control commands that read stdin in multi-process
  operation (local_zones_remove, local_zones, local_datas_remove,
  local_datas, view_local_datas_remove, view_local_datas). They will
  be properly distributed to all processes. dump_cache and load_cache
  are no longer supported in multi-process operation.
- Remove testdata/remote-threaded.tdir. testdata/09-unbound-control.tdir
  now checks both single and multi process/thread operation.
- Merge #1073: fix null pointer dereference issue in function
  ub_ctx_set_fwd.
- Fix to print a parse error when config is read with no name for
  a forward-zone, stub-zone or view.
- Fix for parse end of forward-zone, stub-zone and view.
- Fix for #1064: Fix that cachedb expired messages are considered
  insecure, and thus can be served to clients when dnssec is enabled.
- Fix #1059: Intermittent DNS blocking failure with local-zone and
  always_nxdomain. Addition of local_zones dynamically via
  unbound-control was not finding the zone's parent correctly.
- Fix #1064: Unbound 1.20 Cachedb broken?
- Fix unused variable warning on compilation with no thread support.
- unbound-control-setup: check openssl availability before doing
  anything, patch from Michael Tokarev.
- Update patch to remove 'command' shell builtin and update error
  text.
- Fix to enable that SERVFAIL is cached, for a short period, for more
  cases. In the cases where limits are exceeded.
- Fix spelling of tcp-idle-timeout docs, from Michael Tokarev.
- Merge #1078: Only check old pid if no username.
- Fix #1079: tags from tagged rpz zones are no longer honored after
  upgrade from 1.19.3 to 1.20.0.
- Fix for #1079: fix RPZ taglist in iterator callback that no client
  info is like no taglist intersection.
- Fix to squelch connection reset by peer errors from log. And fix
  that the tcp read errors are labeled as initial for the first calls.
- Merge #1080: AddressSanitizer detection in tdir tests and memory leak
  fixes.
- Fix memory leak when reload_keep_cache is used and num-threads
  changes.
- Fix memory leak on exit for unbound-dnstap-socket; creates false
  negatives during testing.
- Fix memory leak in setup of dsa sig.
- Fix typos for 'the the' in text.
- Fix validation for repeated use of a DNAME record.
- Add unit test for validation of repeated use of a DNAME record.
- Fix #1091: Build fails with OpenSSL &amp;gt;= 3.0 built with
  OPENSSL_NO_DEPRECATED.
- Fix #1092: Ubuntu 22.04 Jammy fails to compile unbound 1.20.0; by
  adding helpful text for the Python interpreter version and allowing
  the default pkg-config unavailability error message to be shown.
- Fix pkg-config availability check in dnstap/dnstap.m4 and
  systemd.m4.
- Explicitly set the RD bit for the mesh query flags when prefetching.
  These queries have no waiting client but they need to be treated as
  recursive.
- Fix ip-ratelimit-cookie setting, it was not applied.
- Fix to remove unused include from the readzone test program.
- Fix unused variable warning in do_cache_remove.
- Fix compile warning in worker pthread id printout.
- Add unit test skip files and bison and flex output to gitignore.
- Fix to use modstack_init in zonemd unit test.
- Fix to remove unneeded linebreak in fptr_wlist.c.
- Fix compile warnings in fptr_wlist.c.
- Fix for repeated use of a DNAME record: first overallocate and then
  move the exact size of the init value to avoid false positive heap
  overflow reads from address sanitizers.
- Fix to print details about the failure to lookup a DNSKEY record
  when validation fails due to the missing DNSKEY. Also for key prime
  and DS lookups.
- Fix for neater printout for error for missing DS response.
- Fix neater printout.
- Fix #1099: Unbound core dump on SIGSEGV.
- Fix for #1099: Fix to check for deleted RRset when the contents
  is updated and fetched after it is stored, and also check for a
  changed RRset.
- Don't check for message TTL changes if the RRsets remain the same.
- Fix that validation reason failure that uses string print uses
  separate buffer that is passed, from the scratch validation buffer.
- Fixup algo_needs_reason string buffer length.
- Fix shadowed error string variable in validator dnskey handling.
- Update list of known EDE codes.
- For #773: In contrib/unbound.service.in set unbound to start after
  network-online.target. Also for contrib/unbound_portable.service.in.
- Fix #1103: unbound 1.20.0 segmentation fault with nghttp2.
- For #1103: fix to also drop mesh state reference when a h2 reply is
  dropped.
- Add RPZ tag tests in acl_interface.tdir.
- For #1102: clearer text for using interface-* options for the
  loopback interface.
- For #1103: fix to also drop mesh state reference when the discard
  limit is reached, when there is an error making a new recursion
  state and when the connection is dropped with is_drop.
- For #1103: Fix to drop mesh state reference for the http2 stream
  associated with the reply, not the currently active stream. And
  it does not remove it twice on a mesh_send_reply call. The reply
  h2_stream is NULL when not in use, for more initialisation.
- Fix dnstap wakeup, a running wakeup timer is left to expire and not
  increased, a timer is started when the dtio thread is sleeping,
  the timer set disabled when the dtio thread goes to sleep, and
  after sleep the thread checks to see if there are messages to log
  immediately.
- Merge #1110: Make fallthrough explicit for libworker.c.
- For #1110: Test for fallthrough attribute in configure and add
  fallthrough attribute annotations.
- Fix compile when the compiler does not support the noreturn
  attribute.
- Fix to have empty definition when not supported for weak attribute.
- Fix uninitialized variable warning in create_tcp_accept_sock.
- Fix link of dnstap without openssl.
- Fix link of unbound-dnstap-socket without openssl.
- Fix #1106: ratelimit-below-domain logs the wrong FROM address.
- Cleanup ede.tdir test.
- For #935 and #1104, clarify RPZ order and semantics.
- Fix to document parameters of auth_zone_verify_zonemd_with_key.
- Fix for #1114: Fix that cache fill for forward-host names is
  performed, so that with nonzero target-fetch-policy it fetches
  forwarder addresses and uses them from cache. Also updated that
  delegation point cache fill routines use CDflag for AAAA message
  lookups, so that its negative lookup stops a recursion since the
  cache uses the bit for disambiguation for dns64 but the recursion
  uses CDflag for the AAAA target lookups, so the check correctly
  stops a useless recursion by its cache lookup.
- Fix dnstap test program, cleans up to have clean memory on exit,
  for tap_data_free, does not delete NULL items. Also it does not try
  to free the tail, specifically in the free of the list since that
  picked up the next item in the list for its loop causing invalid
  free. Added internal unit test to unbound-dnstap-socket for that.
- Fix that the worker mem report with alloc stats does not attempt
  to print memory use of forwards and hints if they have been
  deleted already.
- Fix that alloc stats has strdup checks, it stops debuggers from
  complaining about mismatch at free time.
- Fix testbound for alloc stats strdup in util/alloc.c.
- Fix that alloc stats for forwards and hints are printed, and when
  alloc stats is enabled, the unit test for unbound control waits for
  reloads to complete.
- Fix that for windows the module startup is called and sets up
  the module-config.
- Fix spelling for the cache-min-negative-ttl entry in the
  example.conf.&lt;/p&gt;</content>
    <link href="https://github.com/NLnetLabs/unbound/releases/tag/release-1.21.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/NLnetLabs/unbound/releases/tag/release-1.21.1</id>
    <title>New release for Unbound: Unbound 1.21.1</title>
    <updated>2024-10-04T06:42:01-04:00</updated>
    <author>
      <name>NLnetLabs/unbound</name>
    </author>
    <content>&lt;p&gt;This security release fixes CVE-2024-8508.&lt;/p&gt;
&lt;p&gt;A vulnerability has been discovered in Unbound when handling replies
with very large RRsets that Unbound needs to perform name compression
for.&lt;/p&gt;
&lt;p&gt;Malicious upstreams responses with very large RRsets can cause Unbound
to spend a considerable time applying name compression to downstream
replies. This can lead to degraded performance and eventually denial of
service in well orchestrated attacks.&lt;/p&gt;
&lt;p&gt;The vulnerability can be exploited by a malicious actor querying Unbound
for the specially crafted contents of a malicious zone with very large
RRsets.
Before Unbound replies to the query it will try to apply name
compression which was an unbounded operation that could lock the CPU
until the whole packet was complete.&lt;/p&gt;
&lt;p&gt;Unbound version 1.21.1 introduces a hard limit on the number of name
compression calculations it is willing to do per packet.
Packets that need more compression will result in semi-compressed
packets or truncated packets, even on TCP for huge messages, to avoid
locking the CPU for long.&lt;/p&gt;
&lt;p&gt;This change should not affect normal DNS traffic.&lt;/p&gt;
&lt;p&gt;We would like to thank Toshifumi Sakaguchi for discovering and
responsibly disclosing the vulnerability.&lt;/p&gt;
&lt;p&gt;Bug Fixes:
- Fix CVE-2024-8508, unbounded name compression could lead to denial of
  service. &lt;/p&gt;</content>
    <link href="https://github.com/NLnetLabs/unbound/releases/tag/release-1.21.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/NLnetLabs/unbound/releases/tag/release-1.22.0</id>
    <title>New release for Unbound: Unbound 1.22.0</title>
    <updated>2024-10-17T04:43:37-04:00</updated>
    <author>
      <name>NLnetLabs/unbound</name>
    </author>
    <content>&lt;p&gt;Unbound 1.22.0&lt;/p&gt;
&lt;p&gt;This release has an option to harden against unverified glue, it
is enabled with &lt;code&gt;harden-unverified-glue: yes&lt;/code&gt;. It was contributed
by Karthik Umashankar from Microsoft. This protects Unbound against
bad glue, that is out of zone, by performing a lookup for it.
Because it uses the original information as a last resort if nothing
works, it should not give lookup failures, and add protection.&lt;/p&gt;
&lt;p&gt;There are options to configure the scrubbing for NS records and
the CNAME scrubbing and the max global quota lookup limit from
previous security fix releases. They can be configured with the
options &lt;code&gt;iter-scrub-ns&lt;/code&gt;, &lt;code&gt;iter-scrub-cname&lt;/code&gt; and &lt;code&gt;max-global-quota&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For redis use, with cachedb, it is possible to specify the
timeout for the initial connection separately from the timeout
for commands. With the options &lt;code&gt;redis-command-timeout: 20&lt;/code&gt; and
&lt;code&gt;redis-connect-timeout: 200&lt;/code&gt; they can be set separately, for
a longer connect attempt, but a short command timeout to keep
resolution faster.&lt;/p&gt;
&lt;p&gt;It is possible to log with ISO8601 format with &lt;code&gt;log-time-iso: yes&lt;/code&gt;
this also logs time in milliseconds. Useful if the server writes to
file, syslog may have its own format.&lt;/p&gt;
&lt;p&gt;DNS over QUIC is support is added, if compiled with libngtcp2 and
with the openssl+quic that it uses. Use &lt;code&gt;--with-libngtcp2&lt;/code&gt; for that,
and enable it with &lt;code&gt;quic-port: 853&lt;/code&gt;. There is a post about it
on https://blog.nlnetlabs.nl/dns-over-quic-in-unbound [that is to
appear after the release].&lt;/p&gt;
&lt;p&gt;Features
- Add iter-scrub-ns, iter-scrub-cname and max-global-quota
  configuration options.
- Merge patch to fix for glue that is outside of zone, with
  &lt;code&gt;harden-unverified-glue&lt;/code&gt;, from Karthik Umashankar (Microsoft).
  Enabling this option protects the Unbound resolver against bad
  glue, that is unverified out of zone glue, by resolving them.
  It uses the records as last resort if there is no other working
  glue.
- Add redis-command-timeout: 20 and redis-connect-timeout: 200,
  that can set the timeout separately for commands and the
  connection set up to the redis server. If they are not
  specified, the redis-timeout value is used.
- Fix #1144: [FR] log timestamps in ISO8601 format with timezone.
  This adds the option &lt;code&gt;log-time-iso: yes&lt;/code&gt; that logs in ISO8601
  format.
- Merge #871: DNS over QUIC. This adds &lt;code&gt;quic-port: 853&lt;/code&gt; and
  &lt;code&gt;quic-size: 8m&lt;/code&gt; that enable dnsoverquic, and the counters
  &lt;code&gt;num.query.quic&lt;/code&gt; and &lt;code&gt;mem.quic&lt;/code&gt; in the statistics output.
  The feature needs to be enabled by compiling with libngtcp2,
  with &lt;code&gt;--with-libngtcp2=path&lt;/code&gt; and libngtcp2 needs openssl+quic,
  pass that with &lt;code&gt;--with-ssl=path&lt;/code&gt; to compile unbound as well.&lt;/p&gt;
&lt;p&gt;Bug Fixes
- Fix #1126: unbound-control-setup hangs while testing for openssl
  presence starting from version 1.21.0.
- Add cross platform freebsd, openbsd and netbsd to github ci.
- Fix for char signedness warnings on NetBSD.
- Fix #1127: error: "memory exhausted" when defining more than 9994
  local-zones.
- Fix documentation for cache_fill_missing function.
- Fix #1130: Loads of logs: "validation failure: key for validation
  &lt;domain&gt;. is marked as invalid because of a previous" for
  non-DNSSEC signed zone.
- Fix that when rpz is applied the message does not get picked up by
  the validator. That stops validation failures for the message.
- Fix that stub-zone and forward-zone clauses do not exhaust memory
  for long content.
- Unit test for auth zone transfer TLS, and TLS failure.
- Fix to print port number in logs for auth zone transfer activities.
- Merge #1132: b.root renumbering.
- Fix for #1132, adjusted unit test for change in the test file.
- Fix for #1132, comment about adjusted copy of reference check.
- Merge #1135: Add new IANA trust anchor.
- Fix config file read for dnstap-sample-rate.
- Fix alloc-size and calloc-transposed-args compiler warnings.
- Fix comment to not trigger doxygen unknown command.
- Fix to limit NSEC and NSEC3 TTL when aggressive nsec is
  enabled (RFC9077).
- Add unit test for ttl limit for aggressive nsec.
- Fix and add comments in testdata/val_negcache_ttl.rpl.
- Merge #1140: Fix spelling mistake in comments.
- Fix doxygen warnings by commenting out CLANG_ASSISTED_PARSING,
  CLANG_ADD_INC_PATHS, CLANG_OPTIONS and CLANG_DATABASE_PATH; they were
  already disabled.
- Fix dns64 with prefetch that the prefetch is stored in cache.
- Attempt to further fix doh_downstream_buffer_size.tdir flakiness.
- More clear text for prefetch and minimal-responses in the
  unbound.conf man page.
- Merge #1143: Fix cache update when serve expired is used. Expired
  records are favored over resolution and validation failures when
  serve-expired is used.
- Fix negative cache NSEC3 parameter compares for zero length NSEC3
  salt.
- Fix unbound dnstap socket test program analyzer warnings about
  unused variable assignments and variable initialization.
- Fix #1149: unbound-control-setup hangs sometimes depending on
  the openssl version.
- Fix #1128: Cannot override tcp-upstream and tls-upstream with
  forward-tcp-upstream and forward-tls-upstream.
- Fix to limit NSEC TTL for messages from cachedb. Fix to limit the
  prefetch ttl for messages after a CNAME with short TTL.
- Fix for dnstap compile of doqclient with doq disabled.
- Fix cookie_file test sporadic fails for time change during
  the test.
- Fix add reallocarray to alloc stats unit test, and disable
  override of strdup in unbound-host, and the result of config
  get option is freed properly.
- Fix to disable detection of quic configured ports when quic is
  not compiled in.
- Fix harden-unverified-glue for AAAA cache_fill_missing lookups.
- Fix contrib/aaaa-filter-iterator.patch for change in call
  signature for cache_fill_missing.
- Fix to display warning if quic-port is set but dnsoverquic is not
  enabled when compiled.
- Fix dnsoverquic to extend the number of streams when one is closed.
- Fix for dnstap with dnscrypt and dnstap without dnsoverquic.
- Fix for dnsoverquic and dnstap to use the correct dnstap
  environment.&lt;/p&gt;</content>
    <link href="https://github.com/NLnetLabs/unbound/releases/tag/release-1.22.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/NLnetLabs/unbound/releases/tag/release-1.23.0</id>
    <title>New release for Unbound: Unbound 1.23.0</title>
    <updated>2025-04-24T04:07:21-04:00</updated>
    <author>
      <name>NLnetLabs/unbound</name>
    </author>
    <content>&lt;p&gt;Unbound 1.23.0&lt;/p&gt;
&lt;p&gt;This release features changed defaults, fast reload, redis replica,
DNS Error Reporting, and bug fixes.&lt;/p&gt;
&lt;p&gt;The fast reload is a feature that is listed as experimental. With
&lt;code&gt;unbound-control fast_reload&lt;/code&gt; the server can read the new config in
a thread, and when done only briefly pauses the server to update the
settings. This uses double memory, for like zones from disk or config
that is loaded. It only pauses the server, for like less than a second,
so DNS service is not interrupted by the reload of config. A lot of
config items can be changed, but not all. It has options to print
more information, or memory usage, and there is a list of config
options in the man page.&lt;/p&gt;
&lt;p&gt;The redis replica support allows for a redis backend to use a redis
replica. The read commands are sent to the redis replica host, while
the write commands are sent to the redis server. So with several
replicas there can be more readers that all write to the redis server.&lt;/p&gt;
&lt;p&gt;With DNS error reporting, RFC9567, enabled with
&lt;code&gt;dns-error-reporting: yes&lt;/code&gt;, this uses the error reporting agent to send
failure reports to. The number of error reporting queries is output in
the statistics as &lt;code&gt;num.dns_error_reports&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some defaults are changed in this release. The &lt;code&gt;resolver.arpa.&lt;/code&gt; and
&lt;code&gt;service.arpa.&lt;/code&gt; zones are added to the default locally served zones,
this can be disabled with a nodefault local zone. The default for
&lt;code&gt;max-global-quota&lt;/code&gt; has changed to 200, after operational feedback.
The defaults from RFC8767 are used by &lt;code&gt;serve-expired-client-timeout&lt;/code&gt;
on 1800 milliseconds and &lt;code&gt;serve-expired-ttl&lt;/code&gt; on 86400 seconds. If
Unbound is compiled with edns subnet, the default for module-config
is no longer altered, so that compilation with subnet does not
interfere when the server does not use subnet. When edns subnet needs
to be enabled, &lt;code&gt;module-config: "subnetcache validator iterator"&lt;/code&gt; should
be explicitly set as configuration in the &lt;code&gt;server:&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;If edns subnet is enabled, the default for
module-config is no longer altered, so that compilation with subnet
does not interfere when the server does not use subnet. When edns subnet
is in use, also &lt;code&gt;module-config: "subnetcache validator iterator"&lt;/code&gt; should
be set as configuration in the &lt;code&gt;server:&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;The RC2 has fixes for building on Solaris and portability to Windows,
and fixes a memory leak for DoH.&lt;/p&gt;
&lt;p&gt;Features
- Increase the default of max-global-quota to 200 from 128 after
  operational feedback. Still keeping the possible amplification
  factor (CAMP related issues) in the hundreds.
- Fix #1175: serve-expired does not adhere to secure-by-default
  principle. The default value of serve-expired-client-timeout
  is set to 1800 as suggested by RFC8767.
- For #1175, the default value of serve-expired-ttl is set to 86400
  (1 day) as suggested by RFC8767.
- For #1207: [FR] Support for RESINFO RRType 261 (RFC9606), add
  LDNS_RR_TYPE_RESINFO similar to LDNS_RR_TYPE_TXT.
- Add resolver.arpa and service.arpa to the default locally served
  zones.
- Merge #1042: Fast Reload. The unbound-control fast_reload is added.
  It reads changed config in a thread, then only briefly pauses the
  service threads, that keep running. DNS service is only interrupted
  briefly, less than a second.
- Merge #1019: Redis read-only replica support.
  Introduces new 'redis-replica-*' options for the Redis cache backend.
- Merge #902: DNS Error Reporting (RFC 9567). Introduces new
  configuration option 'dns-error-reporting' and new statistics for
  'num.dns_error_reports'.&lt;/p&gt;
&lt;p&gt;Bug Fixes
- Fix #1154: Tag Incorrectly Applying for Other Interfaces
  Using the Same IP. This fix is not for 1.22.0.
- Fix #1163: Typos in unbound.conf documentation.
- Merge #1159: Stats for discard-timeout and wait-limit.
- Add test case for #1159.
- Some clean up for stat_values.test.
- Merge #1170 from Melroy van den Berg, Fix chroot manpage
  description.
- Merge #1157 from Liang Zhu, Fix heap corruption when calling
  ub_ctx_delete in Windows.
- Fix redis that during a reload it does not fail if the redis
  server does not connect or does not respond. It still logs the
  errors and if the server is up checks expiration features.
- Merge #1167: Makefile.in: fix occasional parallel build failures
  around bison rule.
- Fix SETEX check during Redis (re)initialization.
- Fix for the serve expired DNSSEC information fix, it would not allow
  current delegation information be updated in cache. The fix allows
  current delegation and validation recursion information to be
  updated, but as a consequence no longer has certain expired
  information around for later dnssec valid expired responses.
- Fix to log redis timeout error string on failure.
- More descriptive text for 'harden-algo-downgrade'.
- Complete fix for max-global-quota to 200.
- Fix #1183: the data being used is released in method
  nsec3_hash_test_entry.
- Fix for #1183: release nsec3 hashes per test file.
- Merge #1169 from Sergey Kacheev, fix: lock-free counters for
  auth_zone up/down queries.
- Fix comparison to help static analyzer.
- For #1175, update serve-expired tests.
- Merge #1189: Fix the dname_str method to cause conversion errors
  when the domain name length is 255.
- Merge #1197: dname_str() fixes.
- Merge #1198: Fix log-servfail with serve expired and no useful cache
  contents.
- Safeguard alias loop while looking in the cache for expired answers.
- Merge #1187: Create the SSL_CTX for QUIC before chroot and privilege
  drop.
- Fix typo in log_servfail.tdir test.
- Merge #1204: ci: set persist-credentials: false for actions/checkout
  per zizmor suggestion.
- Merge #1174: Serve expired cache update fixes. Fixes a regression bug
  with serve-expired that appeared in 1.22.0 and would not allow the
  iterator to update the cache with not-yet-validated entries resulting
  in increased outgoing traffic.
- Merge #1214: Use TCP_NODELAY on TLS sockets to speed up the TLS
  handshake.
- Fix #1213: Misleading error message on default access control causing
  refuse.
- Merge #1221: Consider auth zones when checking for forwarders.
- Merge #1222: Unique DoT and DoH SSL contexts to allow for different
  ALPN.
- Create the quic SSL listening context only when needed.
- Fix compile of interface check code when dnscrypt or quic is
  disabled.
- Fix encoding of RR type ATMA.
- Fix to check length in ATMA string to wire.
- Merge #1229: check before use daemon-&amp;gt;shm_info.
- Use the same interface listening port discovery code for all needed
  protocols.
- Port to string only when needed before getaddrinfo().
- Do not open unencrypted channels next to encrypted ones on the same
  port.
- Merge #1224 from Theo Buehler: Do not use DSA API unless USE_DSA is
  set.
- Merge #1220 from Petr Menšík, Add unbound members group access to
  control key.
- Make the default value of module-config "validator iterator"
  regardless of compilation options. --enable-subnet would implicitly
  change the value to enable the subnetcache module by default in the
  past.
- Fix #986: Resolving sas.com with dnssec-validation fails though
  signed delegations seem to be (mostly) correct.
- Consider reconfigurations when calculating the still_useful_timeout
  for servers in the infrastructure cache.
- Fix static analysis report about unhandled EOF on error conditions
  when reading anchor key files.
- Merge #1241: Fix infra-keep-probing for low infra-cache-max-rtt
  values.
- Fix hash calculation for cachedb to ignore case. Previously, cached
  records there were only relevant for same case queries (if not
  already in Unbound's internal cache).
- Merge #1243: Do not shadow tm on line 236.
- Merge #1238: Prefer SOURCE_DATE_EPOCH over actual time.
  Add --help output description for the SOURCE_DATE_EPOCH variable.
- Fix 'unbound-control flush_negative' when reporting removed data;
  reported by David 'eqvinox' Lamparter.
- Fix representation of types GPOS and RESINFO, add rdf type for
  unquoted str.
- Fix #1251: WSAPoll first argument cannot be NULL.
- Fix for windows compile create ssl contexts.
- Fix print of RR type NSAP-PTR, it is an unquoted string.
- Fix #1253: Cache entries fail to be removed from Redis cachedb
  backend with unbound-control flush* +c.
- Fix for #1253: Fix for redis cachedb backend to expect an integer
  reply for the EXPIRE command.
- Fix #1254: &lt;code&gt;send failed: Socket is not connected&lt;/code&gt; and
  &lt;code&gt;remote address is 0.0.0.0 port 53&lt;/code&gt;.
- Fix #1255: Multiple pinnings to vulnerable copies of libexpat.
- For #1255, for ios use an older expat version that does not require
  C++11 language features.
- For #1255, for ios disable building tests that require C++11.
- For #1255, for ios try the latest expat version again.
- Fix unit test dname log printout typecast.
- Fix for ci test, expat is installed on the osx image.
- iana portlist update.
- Skip the unit tests for auth_tls.tdir and auth_tls_failcert.tdir.
- Fix escape more characters when printing an RR type with an unquoted
  string.
- Enable the auth_tls.tdir and auth_tls_failcert.tdir tests.
- Fix unbound-control test so it counts the new flush_negative output,
  also answers the _ta probe from testns and prints command output
  and skip a thread specific test when no threads are available.
- Fix that ub_event has the facility to deal with callbacks for
  fast reload, doq, windows-stop and dnstap.
- Fix fast reload test to check if pid exists before acting on it.
- Merge #1262 from markyang92, fix build with
  'gcc-15 -Wbuiltin-declaration-mismatch' error in compat/malloc.c.
- For #1262, ifdef is no longer needed.
- Fix #1263: Exempt loopback addresses from wait-limit.
- Fix wait-limit-netblock and wait-limit-cookie-netblock config parse
  to allow two arguments.
- Fix ub_event and include dnstap and win_svc headers.
- Fix test for stat_values for wait limit defaults for localhost.
- Fix parameter unused warning in net_help.c.
- Fix mesh_copy_client_info to omit null contents from copy.
- Fix comment name in the rpz nsdname test.
- Fix nettle compile for warnings and ticket keys.
- Fix redis_replica test for unused option defaults and log printout.
- Fix test to speed up common.sh script kill_pid.
- Fix to update common.sh for speed of kill_pid.
- Update to the manpage for the fast_reload part.
- Fix fast_reload to print chroot with config file name.
- Fix to detect if atomic_store links in configure.
- Fix #1264: unbound 1.22.0 leaks memory when doing DoH.
- Fix for print of connection type in log-replies for dot and doh.
- Merge #1265: Fix WSAPoll.&lt;/p&gt;</content>
    <link href="https://github.com/NLnetLabs/unbound/releases/tag/release-1.23.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/NLnetLabs/unbound/releases/tag/release-1.23.1</id>
    <title>New release for Unbound: Unbound 1.23.1</title>
    <updated>2025-07-16T05:20:27-04:00</updated>
    <author>
      <name>NLnetLabs/unbound</name>
    </author>
    <content>&lt;p&gt;This security release fixes the Rebirthday Attack CVE-2025-5994.&lt;/p&gt;
&lt;p&gt;This re-opens up resolvers to a birthday paradox, for EDNS client subnet
servers that respond with non-ECS answers. It only affects Unbound when
compiled with --enable-subnet, and subnetmod is enabled with config
options that send ECS information to upstream servers.&lt;/p&gt;
&lt;p&gt;The CVE is described here
https://nlnetlabs.nl/downloads/unbound/CVE-2025-5994.txt&lt;/p&gt;
&lt;p&gt;We would like to thank Xiang Li (AOSP Lab, Nankai University) for
discovering and responsibly disclosing the vulnerability.&lt;/p&gt;
&lt;p&gt;Bug Fixes:
- Fix RebirthDay Attack CVE-2025-5994, reported by Xiang Li from
  AOSP Lab Nankai University.&lt;/p&gt;</content>
    <link href="https://github.com/NLnetLabs/unbound/releases/tag/release-1.23.1" rel="alternate"/>
  </entry>
</feed>
